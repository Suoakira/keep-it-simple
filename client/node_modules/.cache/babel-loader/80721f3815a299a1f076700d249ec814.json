{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = booleanSomeValidator;\n\nvar _propTypes = require('prop-types');\n\nvar _wrapValidator = require('./helpers/wrapValidator');\n\nvar _wrapValidator2 = _interopRequireDefault(_wrapValidator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction booleanSomeValidator() {\n  for (var _len = arguments.length, notAllPropsFalse = Array(_len), _key = 0; _key < _len; _key++) {\n    notAllPropsFalse[_key] = arguments[_key];\n  }\n\n  if (notAllPropsFalse.length < 1) {\n    throw new TypeError('at least one prop (one of which must be `true`) is required');\n  }\n\n  if (!notAllPropsFalse.every(function (x) {\n    return typeof x === 'string';\n  })) {\n    throw new TypeError('all booleanSome props must be strings');\n  }\n\n  var propsList = notAllPropsFalse.join(', or ');\n\n  var validator = function () {\n    function booleanSome(props, propName, componentName) {\n      var countFalse = function () {\n        function countFalse(count, prop) {\n          return count + (props[prop] === false ? 1 : 0);\n        }\n\n        return countFalse;\n      }();\n\n      var falsePropCount = notAllPropsFalse.reduce(countFalse, 0);\n\n      if (falsePropCount === notAllPropsFalse.length) {\n        return new Error('A ' + String(componentName) + ' must have at least one of these boolean props be `true`: ' + String(propsList));\n      }\n\n      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n        rest[_key2 - 3] = arguments[_key2];\n      }\n\n      return _propTypes.bool.apply(undefined, [props, propName, componentName].concat(rest));\n    }\n\n    return booleanSome;\n  }();\n\n  validator.isRequired = function () {\n    function booleanSomeRequired(props, propName, componentName) {\n      var countFalse = function () {\n        function countFalse(count, prop) {\n          return count + (props[prop] === false ? 1 : 0);\n        }\n\n        return countFalse;\n      }();\n\n      var falsePropCount = notAllPropsFalse.reduce(countFalse, 0);\n\n      if (falsePropCount === notAllPropsFalse.length) {\n        return new Error('A ' + String(componentName) + ' must have at least one of these boolean props be `true`: ' + String(propsList));\n      }\n\n      for (var _len3 = arguments.length, rest = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n        rest[_key3 - 3] = arguments[_key3];\n      }\n\n      return _propTypes.bool.isRequired.apply(_propTypes.bool, [props, propName, componentName].concat(rest));\n    }\n\n    return booleanSomeRequired;\n  }();\n\n  return (0, _wrapValidator2['default'])(validator, 'booleanSome: ' + String(propsList), notAllPropsFalse);\n}","map":null,"metadata":{},"sourceType":"script"}