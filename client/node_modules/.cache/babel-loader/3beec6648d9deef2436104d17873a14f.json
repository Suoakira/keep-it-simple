{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _semanticUiReact = require(\"semantic-ui-react\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _HeaderRange = _interopRequireDefault(require(\"./HeaderRange\"));\n\nvar _HeaderWeeks = _interopRequireDefault(require(\"./HeaderWeeks\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction Header(props) {\n  var rangeRowContent = props.rangeRowContent,\n      displayWeeks = props.displayWeeks,\n      onNextPageBtnClick = props.onNextPageBtnClick,\n      onPrevPageBtnClick = props.onPrevPageBtnClick,\n      hasPrevPage = props.hasPrevPage,\n      hasNextPage = props.hasNextPage,\n      onHeaderClick = props.onHeaderClick,\n      width = props.width,\n      title = props.title;\n  var cellStyle = {\n    border: 'none',\n    borderBottom: displayWeeks ? 'none' : '1px solid rgba(34,36,38,.1)'\n  };\n  var prevPageBtnStyle = {\n    cursor: hasPrevPage ? 'pointer' : 'auto'\n  };\n  var nextPageBtnStyle = {\n    cursor: hasNextPage ? 'pointer' : 'auto'\n  };\n  var headerTitleStyle = {\n    cursor: onHeaderClick ? 'pointer' : 'default'\n  };\n  return _react.default.createElement(_semanticUiReact.Table.Header, null, !_lodash.default.isNil(rangeRowContent) && _react.default.createElement(_HeaderRange.default, {\n    content: rangeRowContent\n  }), _react.default.createElement(_semanticUiReact.Table.Row, null, _react.default.createElement(_semanticUiReact.Table.HeaderCell, {\n    style: cellStyle,\n    colSpan: \"1\"\n  }, _react.default.createElement(_semanticUiReact.Icon, {\n    fitted: true,\n    style: prevPageBtnStyle,\n    disabled: !hasPrevPage,\n    onClick: hasPrevPage ? onPrevPageBtnClick : undefined,\n    name: \"chevron left\"\n  })), _react.default.createElement(_semanticUiReact.Table.HeaderCell, {\n    onClick: onHeaderClick ? onHeaderClick : undefined,\n    style: cellStyle,\n    colSpan: (parseInt(width) - 2).toString()\n  }, _react.default.createElement(\"span\", {\n    style: headerTitleStyle\n  }, title)), _react.default.createElement(_semanticUiReact.Table.HeaderCell, {\n    style: cellStyle,\n    colSpan: \"1\"\n  }, _react.default.createElement(_semanticUiReact.Icon, {\n    fitted: true,\n    style: nextPageBtnStyle,\n    disabled: !hasNextPage,\n    onClick: hasNextPage ? onNextPageBtnClick : undefined,\n    name: \"chevron right\"\n  }))), displayWeeks && _react.default.createElement(_HeaderWeeks.default, null));\n}\n\nHeader.handledProps = [\"displayWeeks\", \"hasNextPage\", \"hasPrevPage\", \"onHeaderClick\", \"onNextPageBtnClick\", \"onPrevPageBtnClick\", \"rangeRowContent\", \"title\", \"width\"];\nHeader.propTypes = {\n  /** Header text content. */\n  title: _propTypes.default.string.isRequired,\n\n  /** Called after click on next page button. */\n  onNextPageBtnClick: _propTypes.default.func.isRequired,\n\n  /** Called after click on previous page button. */\n  onPrevPageBtnClick: _propTypes.default.func.isRequired,\n\n  /** Whether to display previous page button as active or disabled. */\n  hasPrevPage: _propTypes.default.bool.isRequired,\n\n  /** Whether to display next page button as active or disabled. */\n  hasNextPage: _propTypes.default.bool.isRequired,\n\n  /** Whether to display weeks row or not. */\n  displayWeeks: _propTypes.default.bool.isRequired,\n\n  /** Header width. */\n  width: _propTypes.default.oneOf(['3', '4', '7']).isRequired,\n\n  /** Text content to display in dates-range row. */\n  rangeRowContent: _propTypes.default.string,\n\n  /** Called after click on calendar header. */\n  onHeaderClick: _propTypes.default.func\n};\nvar _default = Header;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}