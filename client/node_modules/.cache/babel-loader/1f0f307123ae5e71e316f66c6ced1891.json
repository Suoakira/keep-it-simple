{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _InputView = _interopRequireDefault(require(\"../views/InputView\"));\n\nvar _YearPicker = _interopRequireDefault(require(\"../pickers/YearPicker\"));\n\nvar _MonthPicker = _interopRequireDefault(require(\"../pickers/MonthPicker\"));\n\nvar _DayPicker = _interopRequireDefault(require(\"../pickers/dayPicker/DayPicker\"));\n\nvar _BaseInput2 = _interopRequireDefault(require(\"./BaseInput\"));\n\nvar _parse = require(\"./parse\");\n\nvar _lib = require(\"../lib\");\n\nvar _shared = require(\"./shared\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction getNextMode(currentMode) {\n  if (currentMode === 'year') return 'month';\n  if (currentMode === 'month') return 'day';\n  return 'year';\n}\n\nfunction getPrevMode(currentMode) {\n  if (currentMode === 'day') return 'month';\n  if (currentMode === 'month') return 'year';\n  return 'day';\n}\n\nvar DateInput =\n/*#__PURE__*/\nfunction (_BaseInput) {\n  _inherits(DateInput, _BaseInput);\n\n  function DateInput(props) {\n    var _this;\n\n    _classCallCheck(this, DateInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DateInput).call(this, props));\n    /*\n      state fields:\n        - mode: one of [ 'year', 'month', 'day' ]\n        - year: number\n        - month: number\n        - date: number\n    */\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_switchToNextModeUndelayed\", function () {\n      _this.setState(function (_ref) {\n        var mode = _ref.mode;\n        return {\n          mode: getNextMode(mode)\n        };\n      }, _this.onModeSwitch);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"switchToNextMode\", function () {\n      (0, _lib.tick)(_this._switchToNextModeUndelayed);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_switchToPrevModeUndelayed\", function () {\n      _this.setState(function (_ref2) {\n        var mode = _ref2.mode;\n        return {\n          mode: getPrevMode(mode)\n        };\n      }, _this.onModeSwitch);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"switchToPrevMode\", function () {\n      (0, _lib.tick)(_this._switchToPrevModeUndelayed);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"_onFocus\", function () {\n      if (!_this.props.preserveViewMode) {\n        _this.setState({\n          mode: _this.props.startMode\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSelect\", function (e, _ref3) {\n      var value = _ref3.value;\n\n      if (_this.state.mode === 'day' && _this.props.closable) {\n        _this.closePopup();\n      }\n\n      _this.setState(function (prevState) {\n        var mode = prevState.mode;\n\n        if (mode === 'day') {\n          var outValue = (0, _moment.default)(value).format(_this.props.dateFormat);\n\n          _lodash.default.invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n            value: outValue\n          }));\n        }\n\n        return _objectSpread({}, value);\n      }, function () {\n        return _this.state.mode !== 'day' && _this.switchToNextMode();\n      });\n    });\n\n    _this.state = {\n      mode: props.startMode\n    };\n    var parsedValue = (0, _parse.parseValue)(props.value);\n\n    if (parsedValue) {\n      _this.state.year = parsedValue.year();\n      _this.state.month = parsedValue.month();\n      _this.state.date = parsedValue.date();\n    }\n\n    return _this;\n  }\n\n  _createClass(DateInput, [{\n    key: \"getDateParams\",\n    value: function getDateParams() {\n      /* \n        Return date params that are used for picker initialization.\n        Return undefined if none of [ 'year', 'month', 'date' ]\n        state fields defined.\n      */\n      var _this$state = this.state,\n          year = _this$state.year,\n          month = _this$state.month,\n          date = _this$state.date;\n\n      if (!_lodash.default.isNil(year) || !_lodash.default.isNil(month) || !_lodash.default.isNil(date)) {\n        return {\n          year: year,\n          month: month,\n          date: date\n        };\n      }\n    }\n  }, {\n    key: \"getPicker\",\n    value: function getPicker(_ref4) {\n      var tabIndex = _ref4.tabIndex;\n      var _this$props = this.props,\n          value = _this$props.value,\n          initialDate = _this$props.initialDate,\n          dateFormat = _this$props.dateFormat,\n          disable = _this$props.disable,\n          minDate = _this$props.minDate,\n          maxDate = _this$props.maxDate,\n          enable = _this$props.enable,\n          inline = _this$props.inline;\n      var pickerProps = {\n        isPickerInFocus: this.isPickerInFocus,\n        isTriggerInFocus: this.isTriggerInFocus,\n        inline: inline,\n        onCalendarViewMount: this.onCalendarViewMount,\n        closePopup: this.closePopup,\n        tabIndex: tabIndex,\n        hasHeader: true,\n        onChange: this.handleSelect,\n        onHeaderClick: this.switchToPrevMode,\n        initializeWith: (0, _parse.getInitializer)({\n          initialDate: initialDate,\n          dateFormat: dateFormat,\n          dateParams: this.getDateParams()\n        }),\n        value: (0, _parse.parseValue)((0, _parse.chooseValue)(value, initialDate), dateFormat),\n        enable: (0, _parse.parseArrayOrValue)(enable, dateFormat),\n        minDate: (0, _parse.parseValue)(minDate, dateFormat),\n        maxDate: (0, _parse.parseValue)(maxDate, dateFormat) // key: value, // seems like it works without reinstantiating picker every time value changes\n\n      };\n      var disableParsed = (0, _parse.parseArrayOrValue)(disable, dateFormat);\n      var mode = this.state.mode;\n\n      if (mode === 'year') {\n        return _react.default.createElement(_YearPicker.default, _extends({}, pickerProps, {\n          disable: (0, _shared.getDisabledYears)(disableParsed)\n        }));\n      }\n\n      if (mode === 'month') {\n        return _react.default.createElement(_MonthPicker.default, _extends({}, pickerProps, {\n          disable: (0, _shared.getDisabledMonths)(disableParsed)\n        }));\n      }\n\n      return _react.default.createElement(_DayPicker.default, _extends({}, pickerProps, {\n        disable: disableParsed\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var value = this.props.value;\n      var rest = (0, _lib.getUnhandledProps)(DateInput, this.props);\n      return _react.default.createElement(_InputView.default, _extends({\n        popupIsClosed: this.state.popupIsClosed,\n        onMount: this.onInputViewMount,\n        icon: \"calendar\",\n        onFocus: this._onFocus\n      }, rest, {\n        render: function render(props) {\n          return _this2.getPicker(props);\n        },\n        value: (0, _parse.chooseValue)(value, undefined)\n      }));\n    }\n  }]);\n\n  return DateInput;\n}(_BaseInput2.default);\n\n_defineProperty(DateInput, \"handledProps\", [\"closable\", \"dateFormat\", \"disable\", \"enable\", \"initialDate\", \"maxDate\", \"minDate\", \"preserveViewMode\", \"startMode\", \"value\"]);\n\nDateInput.propTypes = {\n  /** Currently selected value. */\n  value: _propTypes.default.string,\n\n  /** Moment date formatting string. */\n  dateFormat: _propTypes.default.string,\n\n  /** Date to display initially when no date is selected. */\n  initialDate: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(_moment.default), _propTypes.default.instanceOf(Date)]),\n\n  /** Date or list of dates that are displayed as disabled. */\n  disable: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.instanceOf(_moment.default), _propTypes.default.arrayOf(_propTypes.default.instanceOf(_moment.default)), _propTypes.default.instanceOf(Date), _propTypes.default.arrayOf(_propTypes.default.instanceOf(Date))]),\n\n  /** Date or list of dates that are enabled (the rest are disabled). */\n  enable: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.instanceOf(_moment.default)), _propTypes.default.arrayOf(_propTypes.default.instanceOf(Date))]),\n\n  /** Maximum date that can be selected. */\n  maxDate: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(_moment.default), _propTypes.default.instanceOf(Date)]),\n\n  /** Minimum date that can be selected. */\n  minDate: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(_moment.default), _propTypes.default.instanceOf(Date)]),\n\n  /** Preserve viewmode on focus? */\n  preserveViewMode: _propTypes.default.bool,\n\n  /** Display mode to start. */\n  startMode: _propTypes.default.oneOf(['year', 'month', 'day']),\n\n  /** If true, popup closes after selecting a date-time. */\n  closable: _propTypes.default.bool\n};\nDateInput.defaultProps = {\n  dateFormat: 'DD-MM-YYYY',\n  startMode: 'day',\n  preserveViewMode: true\n};\nvar _default = DateInput;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}