{"ast":null,"code":"import _defineProperty from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/containers/mapcomments.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Comment, Form, Header } from 'semantic-ui-react';\nimport CommentCard from \"../components/commentcard\";\nimport API from \"../API\";\n\nvar MapComments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapComments, _Component);\n\n  function MapComments(props) {\n    var _this;\n\n    _classCallCheck(this, MapComments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapComments).call(this, props));\n\n    _this.userFromId = function (id) {\n      var copyUsers = _toConsumableArray(_this.state.users);\n\n      var user = copyUsers.filter(function (user) {\n        return user.id === id;\n      })[0];\n      return [user.username, user.image_url];\n    };\n\n    _this.mapComments = function () {\n      console.log(_this.props.savingTargets); // const copyComments = [...this.state.userComments]\n      // return copyComments.map(comment => \n      // <CommentCard \n      // comment={comment.text} \n      // date={comment.created_at} \n      // username={this.userFromId(comment.user_id)[0]}\n      // image={this.userFromId(comment.user_id)[1]}  \n      // />\n      //   )\n    };\n\n    _this.handleChange = function (e, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      return _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function () {\n      var comment = {\n        user_id: _this.props.userId,\n        saving_target_id: _this.props.savingTargetId,\n        text: _this.state.comment\n      };\n\n      _this.updateScroll();\n\n      API.postComment(comment).then(function (data) {\n        if (data.error) {\n          console.log(\"error: \".concat(data.error));\n        } else {\n          _this.setState({\n            userComments: _toConsumableArray(_this.state.userComments).concat([data])\n          }, function () {\n            return _this.updateScroll();\n          });\n        }\n      });\n    };\n\n    _this.updateScroll = function () {\n      var element = document.querySelector(\".box-area\");\n      element.scrollTop = element.scrollHeight;\n    };\n\n    _this.state = {\n      comment: undefined\n    };\n    return _this;\n  }\n\n  _createClass(MapComments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/api/v1/saving_targets/\".concat(this.props.savingTargets.id)).then(function (data) {\n        return data.json();\n      }).then(function (savingTs) {\n        return _this2.setState({\n          userComments: savingTs.comments\n        });\n      });\n      fetch(\"http://localhost:3000/api/v1/users\").then(function (data) {\n        return data.json();\n      }).then(function (users) {\n        return _this2.setState({\n          users: users // userComments: this.props.userSavingTargets.comments\n\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var comment = this.state.comment;\n      var _this$props = this.props,\n          open = _this$props.open,\n          close = _this$props.close,\n          savingTargets = _this$props.savingTargets;\n      return React.createElement(Modal, {\n        dimmer: \"blurring\",\n        size: \"small\",\n        open: open,\n        onClose: close,\n        closeOnDimmerClick: false,\n        centered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Comment.Group, {\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        dividing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, savingTargets.plan == \"group\" ? \"Comments\" : \"Notes\"), this.props.userSavingTargets && this.state.users ? React.createElement(\"div\", {\n        className: \"box-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.mapComments()) : null, React.createElement(Form, {\n        reply: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Form.TextArea, {\n        name: \"comment\",\n        value: comment,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.handleSubmit();\n        },\n        content: \"Add Reply\",\n        labelPosition: \"left\",\n        icon: \"edit\",\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })))), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Button, {\n        primary: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Close\",\n        onClick: close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MapComments;\n}(Component);\n\nexport default MapComments;","map":{"version":3,"sources":["/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/containers/mapcomments.js"],"names":["React","Component","Modal","Button","Comment","Form","Header","CommentCard","API","MapComments","props","userFromId","id","copyUsers","state","users","user","filter","username","image_url","mapComments","console","log","savingTargets","handleChange","e","name","value","setState","handleSubmit","comment","user_id","userId","saving_target_id","savingTargetId","text","updateScroll","postComment","then","data","error","userComments","element","document","querySelector","scrollTop","scrollHeight","undefined","fetch","json","savingTs","comments","open","close","plan","userSavingTargets"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Modal, Button, Comment, Form, Header } from 'semantic-ui-react'\nimport CommentCard from \"../components/commentcard\"\nimport API from \"../API\"\n\nclass MapComments extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { \n            comment: undefined\n         }\n    }\n\n    userFromId = (id) => {\n        const copyUsers = [...this.state.users]\n        const user = copyUsers.filter(user => user.id === id)[0]\n        return [user.username, user.image_url]\n    }\n\n    mapComments = () => {\n        console.log(this.props.savingTargets)\n        // const copyComments = [...this.state.userComments]\n        // return copyComments.map(comment => \n        // <CommentCard \n        // comment={comment.text} \n        // date={comment.created_at} \n        // username={this.userFromId(comment.user_id)[0]}\n        // image={this.userFromId(comment.user_id)[1]}  \n        // />\n        //   )\n    }\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    handleSubmit = () => {\n\n        const comment = {\n            user_id: this.props.userId,\n            saving_target_id: this.props.savingTargetId,\n            text: this.state.comment            \n        }\n        \n        this.updateScroll()\n\n        API.postComment(comment)\n            .then(data => {\n                if (data.error) {\n                    console.log(`error: ${data.error}`)\n                } else {\n                    this.setState({\n                        userComments: [...this.state.userComments, data]\n                    }, () => this.updateScroll())\n                }\n            })\n    }\n\n    updateScroll = () => {\n    const element = document.querySelector(\".box-area\")\n    element.scrollTop = element.scrollHeight\n}\n\n    componentDidMount() {\n\n            fetch(`http://localhost:3000/api/v1/saving_targets/${this.props.savingTargets.id}`)\n                .then(data => data.json())\n                .then(savingTs =>                \n                    this.setState({\n                    userComments: savingTs.comments})\n                )\n\n        fetch(\"http://localhost:3000/api/v1/users\")\n            .then(data => data.json())\n            .then(users => this.setState({ \n                users: users,\n                // userComments: this.props.userSavingTargets.comments\n            }))\n    }\n\n    render() { \n        const { comment } = this.state\n        const { open, close, savingTargets } = this.props\n        return (\n            \n            <Modal dimmer=\"blurring\" size=\"small\" open={open} onClose={close} closeOnDimmerClick={false} centered={false}>\n                \n                <Modal.Content>\n                    <Comment.Group centered={true}>\n                        <Header as='h3' dividing>\n                            {(savingTargets.plan == \"group\") ?\n                            \"Comments\"\n                            :\n                            \"Notes\"\n                            }\n                        </Header>\n                        {(this.props.userSavingTargets && this.state.users) ?\n                        <div className=\"box-area\">\n                                {this.mapComments()}\n                        </div>\n                                :\n                                null\n                            }\n                        <Form reply>\n                            <Form.TextArea\n                                name='comment'\n                                value={comment}\n                                onChange={this.handleChange}\n                                 />\n                        <Button onClick={() => this.handleSubmit()} content='Add Reply' labelPosition='left' icon='edit' primary />\n                        </Form>\n                    </Comment.Group>\n                 \n                </Modal.Content>\n          \n                <Modal.Actions>\n                    <Button\n                        primary\n                        icon='checkmark'\n                        labelPosition='right'\n                        content=\"Close\"\n                        onClick={close}\n                    />\n                </Modal.Actions>\n         \n            </Modal>\n          )\n    }\n}\n \nexport default MapComments\n\n\n"]},"metadata":{},"sourceType":"module"}