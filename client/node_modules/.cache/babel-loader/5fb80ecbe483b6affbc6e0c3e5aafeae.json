{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = stringStartsWithValidator;\n\nvar _propTypes = require('prop-types');\n\nvar _wrapValidator = require('./helpers/wrapValidator');\n\nvar _wrapValidator2 = _interopRequireDefault(_wrapValidator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction stringStartsWithValidator(start) {\n  if (typeof start !== 'string' || start.length === 0) {\n    throw new TypeError('a non-empty string is required');\n  }\n\n  var validator = function () {\n    function stringStartsWith(props, propName, componentName) {\n      var propValue = props[propName];\n\n      if (propValue == null) {\n        return null;\n      }\n\n      for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n        rest[_key - 3] = arguments[_key];\n      }\n\n      var stringError = _propTypes.string.apply(undefined, [props, propName, componentName].concat(rest));\n\n      if (stringError) {\n        return stringError;\n      }\n\n      if (!propValue.startsWith(start) || propValue.length <= start.length) {\n        return new TypeError(String(componentName) + ': ' + String(propName) + ' does not start with \"' + String(start) + '\"');\n      }\n\n      return null;\n    }\n\n    return stringStartsWith;\n  }();\n\n  validator.isRequired = function () {\n    function requiredStringStartsWith() {\n      var stringError = _propTypes.string.isRequired.apply(_propTypes.string, arguments);\n\n      if (stringError) {\n        return stringError;\n      }\n\n      return validator.apply(undefined, arguments);\n    }\n\n    return requiredStringStartsWith;\n  }();\n\n  return (0, _wrapValidator2['default'])(validator, 'stringStartsWith: ' + String(start));\n}","map":null,"metadata":{},"sourceType":"script"}