{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _InputView = _interopRequireDefault(require(\"../views/InputView\"));\n\nvar _HourPicker = _interopRequireDefault(require(\"../pickers/timePicker/HourPicker\"));\n\nvar _MinutePicker = _interopRequireDefault(require(\"../pickers/timePicker/MinutePicker\"));\n\nvar _BaseInput2 = _interopRequireDefault(require(\"./BaseInput\"));\n\nvar _parse = require(\"./parse\");\n\nvar _lib = require(\"../lib\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction getNextMode(currentMode) {\n  if (currentMode === 'hour') return 'minute';\n  return 'hour';\n}\n\nvar TimeInput =\n/*#__PURE__*/\nfunction (_BaseInput) {\n  _inherits(TimeInput, _BaseInput);\n  /**\n   * Component responsibility:\n   *  - parse time input string\n   *  - switch between modes ['hour', 'minute']\n   *  - handle HourPicker/MinutePicker change (format { hour: number, minute: number } into output time string)\n   */\n\n\n  function TimeInput(props) {\n    var _this;\n\n    _classCallCheck(this, TimeInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimeInput).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSelect\", function (e, _ref) {\n      var value = _ref.value;\n      (0, _lib.tick)(_this.handleSelectUndelayed, e, {\n        value: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSelectUndelayed\", function (e, _ref2) {\n      var value = _ref2.value;\n      var hour = value.hour,\n          minute = value.minute;\n      var _this$props = _this.props,\n          timeFormat = _this$props.timeFormat,\n          disableMinute = _this$props.disableMinute;\n      var outputTimeString = '';\n\n      if (_this.state.mode === 'hour' && !_lodash.default.isNil(hour)) {\n        outputTimeString = (0, _moment.default)({\n          hour: hour\n        }).format(_parse.TIME_FORMAT[timeFormat]);\n      } else if (!_lodash.default.isNil(hour) && !_lodash.default.isNil(minute)) {\n        outputTimeString = (0, _moment.default)({\n          hour: hour,\n          minute: minute\n        }).format(_parse.TIME_FORMAT[timeFormat]);\n      }\n\n      _lodash.default.invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        value: outputTimeString\n      }));\n\n      if (_this.props.closable && _this.state.mode === 'minute') {\n        _this.closePopup();\n      }\n\n      if (!disableMinute) _this.switchToNextMode();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"switchToNextMode\", function () {\n      _this.setState(function (_ref3) {\n        var mode = _ref3.mode;\n        return {\n          mode: getNextMode(mode)\n        };\n      }, _this.onModeSwitch);\n    });\n\n    _this.state = {\n      mode: 'hour'\n    };\n    return _this;\n  }\n\n  _createClass(TimeInput, [{\n    key: \"getPicker\",\n    value: function getPicker(_ref4) {\n      var tabIndex = _ref4.tabIndex;\n      var _this$props2 = this.props,\n          value = _this$props2.value,\n          timeFormat = _this$props2.timeFormat,\n          inline = _this$props2.inline;\n      var currentValue = (0, _parse.parseValue)(value, _parse.TIME_FORMAT[timeFormat]);\n      var pickerProps = {\n        inline: inline,\n        onCalendarViewMount: this.onCalendarViewMount,\n        isPickerInFocus: this.isPickerInFocus,\n        isTriggerInFocus: this.isTriggerInFocus,\n        hasHeader: false,\n        closePopup: this.closePopup,\n        initializeWith: (0, _parse.getInitializer)({\n          initialDate: currentValue,\n          dateFormat: _parse.TIME_FORMAT[timeFormat]\n        }),\n        value: currentValue,\n        onChange: this.handleSelect,\n        timeFormat: timeFormat,\n        tabIndex: tabIndex // key: value, // seems like it works without reinstantiating picker every time value changes\n\n      };\n\n      if (this.state.mode === 'hour') {\n        return _react.default.createElement(_HourPicker.default, pickerProps);\n      }\n\n      return _react.default.createElement(_MinutePicker.default, pickerProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var value = this.props.value;\n      var rest = (0, _lib.getUnhandledProps)(TimeInput, this.props);\n      return _react.default.createElement(_InputView.default, _extends({\n        popupIsClosed: this.state.popupIsClosed,\n        icon: \"time\",\n        onMount: this.onInputViewMount\n      }, rest, {\n        value: value,\n        render: function render(pickerProps) {\n          return _this2.getPicker(pickerProps);\n        }\n      }));\n    }\n  }]);\n\n  return TimeInput;\n}(_BaseInput2.default);\n\n_defineProperty(TimeInput, \"handledProps\", [\"closable\", \"disableMinute\", \"timeFormat\", \"value\"]);\n\nTimeInput.propTypes = {\n  /** Currently selected value. */\n  value: _propTypes.default.string,\n\n  /** One of [\"24\", \"AMPM\", \"ampm\"] */\n  timeFormat: _propTypes.default.oneOf(['24', 'AMPM', 'ampm']),\n\n  /** If true, popup closes after selecting a date-time. */\n  closable: _propTypes.default.bool,\n\n  /** If true, minutes picker won't be shown after picking the hour. */\n  disableMinute: _propTypes.default.bool\n};\nTimeInput.defaultProps = {\n  timeFormat: '24',\n  disableMinute: false\n};\nvar _default = TimeInput;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}