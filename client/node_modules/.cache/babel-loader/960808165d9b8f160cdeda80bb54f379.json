{"ast":null,"code":"import _toConsumableArray from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/containers/existingplans.js\";\nimport React, { Component } from 'react';\nimport ExisitingPlansCard from \"../components/exisitingplancard\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Header, Icon, Modal, Loader, Segment } from 'semantic-ui-react';\nimport { Pagination } from 'semantic-ui-react';\n\nvar ExisitingPlans =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExisitingPlans, _Component);\n\n  function ExisitingPlans(props) {\n    var _this;\n\n    _classCallCheck(this, ExisitingPlans);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExisitingPlans).call(this, props));\n\n    _this.handleChange = function (event) {\n      return _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.toggleButton = function () {\n      _this.setState({\n        togglePlan: !_this.state.togglePlan\n      });\n\n      _this.filterStartDate();\n    };\n\n    _this.filterStartDate = function () {\n      var copySaveTargets = _toConsumableArray(_this.state.storedUserDetails.saving_targets);\n\n      var filters = copySaveTargets.filter(function (savingTargets) {\n        return Date.now() < new Date(savingTargets.start_date).getTime();\n      });\n      console.log(filters);\n    };\n\n    _this.mapPersonalPlans = function () {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          localeDelete = _assertThisInitialize.localeDelete;\n\n      var copySaveTargets = _toConsumableArray(_this.state.storedUserDetails.saving_targets);\n\n      var personalPlan = copySaveTargets.filter(function (savingTargets) {\n        return savingTargets.plan.toLowerCase() === \"personal\";\n      });\n      return personalPlan.map(function (savingTargets) {\n        return React.createElement(ExisitingPlansCard, {\n          savingTargets: savingTargets,\n          localeDelete: localeDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.mapGroupPlans = function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n          localeDelete = _assertThisInitialize2.localeDelete;\n\n      var copySaveTargets = _toConsumableArray(_this.state.storedUserDetails.saving_targets);\n\n      var groupPlan = copySaveTargets.filter(function (savingTargets) {\n        return savingTargets.plan.toLowerCase() === \"group\";\n      });\n      return groupPlan.map(function (savingTargets) {\n        return React.createElement(ExisitingPlansCard, {\n          savingTargets: savingTargets,\n          localeDelete: localeDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.localeDelete = function (saving) {\n      var copyUserSts = _toConsumableArray(_this.state.storedUserDetails.saving_targets);\n\n      var filteredSts = copyUserSts.filter(function (savingTargets) {\n        return savingTargets.id !== saving.id;\n      });\n      copyUserSts.saving_targets = filteredSts;\n\n      _this.setState({\n        storedUserDetails: copyUserSts\n      });\n    };\n\n    _this.state = {\n      searchFilter: \"\",\n      togglePlan: true\n    };\n    return _this;\n  }\n\n  _createClass(ExisitingPlans, [{\n    key: \"componentDidMount\",\n    // filterPlans = (input) => {\n    //     const filteredPlans = this.state.storedUserDetails.saving_targets.filter(\n    //         plan => plan.name.toLowerCase().includes(input.toLowerCase()))\n    //     let copyUserSts = this.state.storedUserDetails\n    //     copyUserSts.saving_targets = filteredPlans\n    //     this.setState({ storedUserDetails: copyUserSts })\n    // }\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(this.props.storedUserDetails.id)).then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        return _this2.setState({\n          storedUserDetails: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // this.filterPlans(this.state.searchFilter)\n      var toggleButton = this.toggleButton;\n      var username = this.props.username;\n      var _this$state = this.state,\n          storedUserDetails = _this$state.storedUserDetails,\n          togglePlan = _this$state.togglePlan;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button-pad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"ui big icon input search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"searchFilter\",\n        placeholder: \"Find a Plan...\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        class: \"search icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), togglePlan ? React.createElement(Button, {\n        primary: true,\n        size: \"large\",\n        onClick: function onClick() {\n          return toggleButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Upcoming Plans\") : React.createElement(Button, {\n        primary: true,\n        size: \"large\",\n        onClick: function onClick() {\n          return toggleButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Current Plans\")), username ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, storedUserDetails ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Personal Plans\", React.createElement(Header.Subheader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"A collection of your personal saving goals.\"))), !!this.mapPersonalPlans()[0] ? React.createElement(\"div\", {\n        className: \"ui grid container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.mapPersonalPlans()) : React.createElement(\"div\", {\n        className: \"no-plans\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"You have no saving plans :(\"), React.createElement(\"button\", {\n        class: \"ui primary button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Create A Plan\", React.createElement(\"i\", {\n        class: \"arrow right icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })))), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Group Plans\", React.createElement(Header.Subheader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"A collection your of group saving goals.\"))), React.createElement(\"div\", {\n        className: \"ui grid container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.mapGroupPlans()))) : React.createElement(Loader, {\n        active: true,\n        inline: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ExisitingPlans;\n}(Component);\n\nexport default ExisitingPlans;","map":{"version":3,"sources":["/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/containers/existingplans.js"],"names":["React","Component","ExisitingPlansCard","Redirect","Button","Header","Icon","Modal","Loader","Segment","Pagination","ExisitingPlans","props","handleChange","event","setState","target","name","value","toggleButton","togglePlan","state","filterStartDate","copySaveTargets","storedUserDetails","saving_targets","filters","filter","savingTargets","Date","now","start_date","getTime","console","log","mapPersonalPlans","localeDelete","personalPlan","plan","toLowerCase","map","mapGroupPlans","groupPlan","saving","copyUserSts","filteredSts","id","searchFilter","fetch","then","resp","json","data","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ExisitingPlansCard from \"../components/exisitingplancard\"\nimport { Redirect } from \"react-router-dom\"\nimport { Button, Header, Icon, Modal, Loader, Segment } from 'semantic-ui-react'\nimport { Pagination } from 'semantic-ui-react'\n\nclass ExisitingPlans extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchFilter: \"\",\n            togglePlan: true\n          }\n    }\n\n    handleChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n    toggleButton = () => {\n        this.setState({\n            togglePlan: !this.state.togglePlan\n        })\n        this.filterStartDate()\n    }\n\n    //future plans\n    filterStartDate = () => {\n        const copySaveTargets = [...this.state.storedUserDetails.saving_targets]\n        const filters = copySaveTargets.filter(savingTargets => Date.now() < new Date(savingTargets.start_date).getTime())\n        console.log(filters)\n    }\n    \n    mapPersonalPlans = () => {\n        const { localeDelete } = this\n        const copySaveTargets = [...this.state.storedUserDetails.saving_targets]\n        const personalPlan = copySaveTargets.filter(savingTargets => savingTargets.plan.toLowerCase() === \"personal\")\n        return personalPlan.map(savingTargets => <ExisitingPlansCard savingTargets={savingTargets} localeDelete={localeDelete} />)\n    }\n\n    mapGroupPlans = () => {\n        const { localeDelete } = this\n        const copySaveTargets = [...this.state.storedUserDetails.saving_targets]\n        const groupPlan = copySaveTargets.filter(savingTargets => savingTargets.plan.toLowerCase() === \"group\")\n        return groupPlan.map(savingTargets => <ExisitingPlansCard savingTargets={savingTargets} localeDelete={localeDelete} />)\n    }\n\n    localeDelete = (saving) => {\n        let copyUserSts = [...this.state.storedUserDetails.saving_targets]\n        const filteredSts = copyUserSts.filter(savingTargets => savingTargets.id !== saving.id )\n        copyUserSts.saving_targets = filteredSts\n        this.setState({ storedUserDetails: copyUserSts})\n    }\n\n    // filterPlans = (input) => {\n    //     const filteredPlans = this.state.storedUserDetails.saving_targets.filter(\n    //         plan => plan.name.toLowerCase().includes(input.toLowerCase()))\n    //     let copyUserSts = this.state.storedUserDetails\n    //     copyUserSts.saving_targets = filteredPlans\n    //     this.setState({ storedUserDetails: copyUserSts })\n    // }\n\n    componentDidMount() {\n        fetch(`http://localhost:3000/api/v1/users/${this.props.storedUserDetails.id}`)\n            .then(resp => resp.json())\n            .then(data => this.setState({ storedUserDetails: data }))\n    }\n\n    render() { \n        // this.filterPlans(this.state.searchFilter)\n        const { toggleButton } = this\n        const { username } = this.props\n        const { storedUserDetails, togglePlan } = this.state\n  \n        return ( \n            \n            <React.Fragment>\n                <div className=\"wrapper\">\n                    <div className=\"button-pad\">\n                        <div class=\"ui big icon input search-bar\">\n                                <input \n                                type=\"text\"\n                                name=\"searchFilter\"\n                                placeholder=\"Find a Plan...\"\n                                onChange={this.handleChange}\n                                    />\n                            <i class=\"search icon\"></i>\n                        </div>\n                            {togglePlan ?\n                            <Button\n                                primary\n                                size=\"large\"\n                                onClick={() => toggleButton()}\n                            >\n                                Upcoming Plans\n                            </Button>\n                            :\n                            <Button\n                                primary\n                                size=\"large\"\n                                onClick={() => toggleButton()}\n                            >\n                                Current Plans\n                            </Button>    \n                            }\n                    </div>\n            {username?\n                <React.Fragment>\n                    {storedUserDetails?\n                    <React.Fragment>\n                        <Segment>\n                            <Segment>\n                                <Header size='large'>Personal Plans\n                                    <Header.Subheader>A collection of your personal saving goals.</Header.Subheader>\n                                </Header>\n                            </Segment>\n                                {!!this.mapPersonalPlans()[0] ?\n                                <div className=\"ui grid container\">\n                                    {this.mapPersonalPlans()}\n                                </div>\n                \n                                :\n                                <div className=\"no-plans\">\n                                    <p>You have no saving plans :(</p>\n                                    <button class=\"ui primary button\">\n                                        Create A Plan<i class=\"arrow right icon\"></i>\n                                    </button>\n\n                                </div>\n                                }\n                        </Segment>\n                        <Segment>\n                            <Segment>\n                                <Header size='large'>Group Plans\n                                    <Header.Subheader>A collection your of group saving goals.</Header.Subheader>\n                                </Header>\n                            </Segment>\n                            <div className=\"ui grid container\">\n                                    {this.mapGroupPlans()}\n                            </div>\n                        </Segment>\n                    </React.Fragment>\n                            :\n                        <Loader active inline='centered' />\n                        }\n                </React.Fragment>\n                \n                :\n                <React.Fragment>\n                <Redirect\n                    to=\"/login\" /> \n                </React.Fragment>\n                }\n\n                </div>\n            </React.Fragment>\n        \n        \n                )\n            }\n        }\n         \n        export default ExisitingPlans\n        \n        \n        \n"]},"metadata":{},"sourceType":"module"}