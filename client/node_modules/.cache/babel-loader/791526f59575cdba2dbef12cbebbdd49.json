{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = valuesOfValidator;\n\nvar _isPrimitive = require('./helpers/isPrimitive');\n\nvar _isPrimitive2 = _interopRequireDefault(_isPrimitive);\n\nvar _wrapValidator = require('./helpers/wrapValidator');\n\nvar _wrapValidator2 = _interopRequireDefault(_wrapValidator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n} // code adapted from https://github.com/facebook/react/blob/14156e56b9cf18ac86963185c5af4abddf3ff811/src/isomorphic/classic/types/ReactPropTypes.js#L307-L340\n\n\nfunction valuesOfValidator(propType) {\n  if (typeof propType !== 'function') {\n    throw new TypeError('objectOf: propType must be a function');\n  }\n\n  var validator = function () {\n    function valuesOf(props, propName, componentName, location, propFullName) {\n      for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n        rest[_key - 5] = arguments[_key];\n      }\n\n      var propValue = props[propName];\n\n      if (propValue == null || (0, _isPrimitive2['default'])(propValue)) {\n        return null;\n      }\n\n      var firstError = void 0;\n      Object.keys(propValue).some(function (key) {\n        firstError = propType.apply(undefined, [propValue, key, componentName, location, String(propFullName) + '.' + String(key)].concat(rest));\n        return firstError;\n      });\n      return firstError || null;\n    }\n\n    return valuesOf;\n  }();\n\n  validator.isRequired = function () {\n    function valuesOfRequired(props, propName, componentName) {\n      var propValue = props[propName];\n\n      if (propValue == null) {\n        return new TypeError(String(componentName) + ': ' + String(propName) + ' is required.');\n      }\n\n      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n        rest[_key2 - 3] = arguments[_key2];\n      }\n\n      return validator.apply(undefined, [props, propName, componentName].concat(rest));\n    }\n\n    return valuesOfRequired;\n  }();\n\n  return (0, _wrapValidator2['default'])(validator, 'valuesOf', propType);\n}","map":null,"metadata":{},"sourceType":"script"}