{"ast":null,"code":"import _toConsumableArray from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/components/detailspage.js\";\nimport React, { Component } from 'react';\nimport { Button, Header, Image, Modal, Progress, Statistic, Loader } from 'semantic-ui-react';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar DetailsModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DetailsModal, _Component);\n\n  function DetailsModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DetailsModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DetailsModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      usernames: [],\n      amounts: []\n    };\n\n    _this.close = function () {\n      return _this.setState({\n        open: false\n      });\n    };\n\n    _this.getUserName = function (id) {\n      var copyUsers = _toConsumableArray(_this.state.users);\n\n      var user = copyUsers.filter(function (user) {\n        return user.id === id;\n      });\n      return user[0].username;\n    };\n\n    _this.mapData = function () {\n      _this.props.userSavingTargets.user_saving_targets.map(function (data) {\n        return _this.setState({\n          usernames: _toConsumableArray(_this.state.usernames).concat([_this.getUserName(data.user_id)]),\n          amounts: _toConsumableArray(_this.state.amounts).concat([data.amount])\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DetailsModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/api/v1/users\").then(function (data) {\n        return data.json();\n      }).then(function (users) {\n        return _this2.setState({\n          users: users,\n          data1: {\n            labels: ['Days Passed', \"Days to Go\"],\n            datasets: [{\n              data: [_this2.props.daysSoFar, _this2.props.daysToGo],\n              backgroundColor: ['#FF6384', '#FFCE56'],\n              hoverBackgroundColor: ['#FF6384', '#FFCE56']\n            }]\n          },\n          percentToSave: _this2.props.percentSave\n        });\n      }).then(function () {\n        return _this2.mapData();\n      });\n    } // https://github.com/jerairrest/react-chartjs-2 for documentation on carting\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          close = _this$props.close,\n          image = _this$props.image,\n          name = _this$props.name,\n          category = _this$props.category,\n          daysToGo = _this$props.daysToGo,\n          totalDays = _this$props.totalDays,\n          daysSoFar = _this$props.daysSoFar,\n          savingPerDay = _this$props.savingPerDay,\n          leftToSave = _this$props.leftToSave,\n          savedSoFar = _this$props.savedSoFar;\n      var percentToSave = this.state.percentToSave;\n      return this.state.users ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, console.log(this.props.userSavingTargets.user_saving_targets), React.createElement(Modal, {\n        dimmer: \"blurring\",\n        open: open,\n        onClose: close,\n        closeOnDimmerClick: false,\n        centered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, name), React.createElement(Modal.Content, {\n        image: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Modal.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Deadline Breakdown\"), React.createElement(Statistic.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Statistic, {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, daysToGo), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Days To Target\"))), React.createElement(Statistic.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Statistic, {\n        color: \"yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, daysSoFar, \"days \"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Savings Streak\"))), React.createElement(Statistic.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Statistic, {\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"\\xA3\", savingPerDay), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Saved Per Day\")), React.createElement(Statistic, {\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"\\xA3\", savedSoFar), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Total Saved\")))), React.createElement(Modal.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Doughnut, {\n        data: this.state.data1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), this.props.percentSave ? React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"To Funding Goal\", React.createElement(Progress, {\n        percent: 100 - this.props.percentSave,\n        indicating: true,\n        progress: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })) : React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Loading\"), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        primary: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Close\",\n        onClick: close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })))) : React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Loading\");\n    }\n  }]);\n\n  return DetailsModal;\n}(Component);\n\nexport default DetailsModal;","map":{"version":3,"sources":["/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/components/detailspage.js"],"names":["React","Component","Button","Header","Image","Modal","Progress","Statistic","Loader","Doughnut","DetailsModal","state","usernames","amounts","close","setState","open","getUserName","id","copyUsers","users","user","filter","username","mapData","props","userSavingTargets","user_saving_targets","map","data","user_id","amount","fetch","then","json","data1","labels","datasets","daysSoFar","daysToGo","backgroundColor","hoverBackgroundColor","percentToSave","percentSave","image","name","category","totalDays","savingPerDay","leftToSave","savedSoFar","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Header, Image, Modal, Progress, Statistic, Loader } from 'semantic-ui-react'\nimport { Doughnut } from 'react-chartjs-2';\n\nclass DetailsModal extends Component {\n    state = { \n        usernames: [],\n        amounts: []\n     }\n\n\n    close = () => this.setState({ open: false })\n\n     getUserName = (id) => {\n        const copyUsers = [...this.state.users]\n        const user = copyUsers.filter(user => user.id === id)\n        return user[0].username\n     }\n\n     mapData = () => {\n         this.props.userSavingTargets.user_saving_targets.map(data => this.setState({\n             usernames: [...this.state.usernames, this.getUserName(data.user_id)],\n             amounts: [...this.state.amounts, data.amount]\n         })      \n        )\n     }\n\n    componentDidMount() {\n        fetch(\"http://localhost:3000/api/v1/users\")\n            .then(data => data.json())\n            .then(users => \n                this.setState({\n                users: users,\n                data1: {\n                    labels: [\n                        'Days Passed',\n                        \"Days to Go\"\n                    ],\n                    datasets: [{\n                        data: [this.props.daysSoFar, this.props.daysToGo],\n                        backgroundColor: [\n                            '#FF6384',\n                            '#FFCE56',\n\n                        ],\n                        hoverBackgroundColor: [\n                            '#FF6384',\n                            '#FFCE56',\n                        ]\n                    }]\n                },\n                percentToSave: this.props.percentSave\n            })\n        ).then(() => this.mapData())\n    }\n    // https://github.com/jerairrest/react-chartjs-2 for documentation on carting\n    render() {\n        const { open, close, image, name, category, daysToGo, totalDays, daysSoFar, savingPerDay, leftToSave, savedSoFar } = this.props\n        const { percentToSave } = this.state\n\n        \n        \n\n\n        return (\n            this.state.users?\n            <div>\n                    {console.log(this.props.userSavingTargets.user_saving_targets)}   \n                <Modal dimmer=\"blurring\" open={open} onClose={close} closeOnDimmerClick={false} centered={false}>\n                    <Modal.Header>{name}</Modal.Header>\n                    <Modal.Content image>\n                \n                        <Modal.Description>\n                                <Header>Deadline Breakdown</Header>\n                            <Statistic.Group>\n                                <Statistic color='red'>\n                                    <Statistic.Value>{daysToGo}</Statistic.Value>\n                                    <Statistic.Label>Days To Target</Statistic.Label>\n                                </Statistic>\n                            </Statistic.Group>\n                            <Statistic.Group>\n                                \n                                <Statistic color='yellow'>\n                                    <Statistic.Value>{daysSoFar}days </Statistic.Value>\n                                    <Statistic.Label>Savings Streak</Statistic.Label>\n                                </Statistic>\n                            </Statistic.Group>\n                            <Statistic.Group>\n                                <Statistic color='olive'>\n                                    <Statistic.Value>£{savingPerDay}</Statistic.Value>\n                                    <Statistic.Label>Saved Per Day</Statistic.Label>\n                                </Statistic>\n\n                                <Statistic color='teal'>\n                                    <Statistic.Value>£{savedSoFar}</Statistic.Value>\n                                    <Statistic.Label>Total Saved</Statistic.Label>\n                                </Statistic>\n\n                            </Statistic.Group>\n                        </Modal.Description>\n                        <Modal.Description>\n                \n                            <Doughnut data={this.state.data1} /> \n                       \n                        </Modal.Description>\n                        \n                    </Modal.Content>\n                        {this.props.percentSave?\n                        <Header>To Funding Goal\n                            <Progress percent={100 - this.props.percentSave} indicating progress />  \n                        </Header>   \n                        :\n                        <Loader>Loading</Loader>\n                        }\n                        \n                    <Modal.Actions>\n                        <Button\n                            primary\n                            icon='checkmark'\n                            labelPosition='right'\n                            content=\"Close\"\n                            onClick={close}\n                        />\n                    </Modal.Actions>\n                    \n                </Modal>\n            </div>\n            :\n            <Loader>Loading</Loader>\n        )\n    }\n}\n\nexport default DetailsModal"]},"metadata":{},"sourceType":"module"}