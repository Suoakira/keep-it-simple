{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDisabledMonths = getDisabledMonths;\nexports.getDisabledYears = getDisabledYears;\n/**\n * Filter out all moments that don't have\n * all dates in month disabled.\n * @param {*} moments\n * @return An array of moments; each of these moments\n * doesn't have any selectable date in month.\n */\n\nfunction getDisabledMonths(moments) {\n  if (!moments) {\n    return;\n  }\n\n  var disabledMonths = [];\n  var checkedMonths = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var m = _step.value;\n\n      if (checkedMonths.indexOf(m.month()) < 0) {\n        var momentsForMonth = moments.filter(function (_m) {\n          return _m.month() === m.month();\n        });\n        var momentsForMonthUniq = [];\n\n        for (var i = 0; i < momentsForMonth.length; i++) {\n          if (momentsForMonthUniq.indexOf(momentsForMonth[i]) < 0) {\n            momentsForMonthUniq.push(momentsForMonth[i]);\n          }\n        }\n\n        if (momentsForMonthUniq.length === m.daysInMonth()) {\n          disabledMonths.push(m);\n        }\n\n        checkedMonths.push(m);\n      }\n    };\n\n    for (var _iterator = moments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return disabledMonths;\n}\n/**\n * Filter out all moments that don't have\n * all months in year disabled.\n * @param {*} moments\n * @return An array of moments; each of these moments\n * doesn't have any selectable month in year.\n */\n\n\nfunction getDisabledYears(moments) {\n  if (!moments) {\n    return;\n  }\n\n  var disabledYears = [];\n  var checkedYears = [];\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    var _loop2 = function _loop2() {\n      var y = _step2.value;\n\n      if (checkedYears.indexOf(y.year()) < 0) {\n        var momentsForYear = getDisabledMonths(moments.filter(function (_y) {\n          return _y.year() === y.year();\n        }));\n        var momentsForYearUniq = [];\n\n        for (var i = 0; i < momentsForYear.length; i++) {\n          if (momentsForYearUniq.indexOf(momentsForYear[i]) < 0) {\n            momentsForYearUniq.push(momentsForYear[i]);\n          }\n        }\n\n        if (momentsForYearUniq.length === 12) {\n          disabledYears.push(y);\n        }\n\n        checkedYears.push(y);\n      }\n    };\n\n    for (var _iterator2 = moments[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      _loop2();\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return disabledYears;\n}","map":null,"metadata":{},"sourceType":"script"}