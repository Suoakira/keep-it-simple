{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseValue = parseValue;\nexports.parseArrayOrValue = parseArrayOrValue;\nexports.getInitializer = getInitializer;\nexports.chooseValue = chooseValue;\nexports.TIME_FORMAT = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar TIME_FORMAT = {\n  '24': 'HH:mm',\n  'AMPM': 'hh:mm A',\n  'ampm': 'hh:mm a'\n};\n/** Parse string, moment, Date.\n * \n * Return unedfined on invalid input.\n */\n\nexports.TIME_FORMAT = TIME_FORMAT;\n\nfunction parseValue(value, dateFormat) {\n  if (!_lodash.default.isNil(value) && !_lodash.default.isNil(dateFormat)) {\n    var date = (0, _moment.default)(value, dateFormat);\n\n    if (date.isValid()) {\n      return date;\n    }\n  }\n}\n/** Parse string, moment, Date, string[], moment[], Date[].\n * \n * Return array of moments. Returned value contains only valid moments.\n * Return undefined if none of the input values are valid.\n */\n\n\nfunction parseArrayOrValue(data, dateFormat) {\n  if (_lodash.default.isArray(data)) {\n    var parsed = _lodash.default.compact(data.map(function (item) {\n      return parseValue(item, dateFormat);\n    }));\n\n    if (parsed.length > 0) {\n      return parsed;\n    }\n  }\n\n  var parsedValue = parseValue(data, dateFormat);\n  return parsedValue && [parsedValue];\n}\n/** Create moment.\n * \n * Creates moment using `dateParams` or `initialDate` arguments (if provided).\n * Precedense order: dateParams -> initialDate -> default value\n */\n\n\nfunction getInitializer(context\n/*value, initialDate, dateFormat, dateParams*/\n) {\n  var dateParams = context.dateParams,\n      initialDate = context.initialDate,\n      dateFormat = context.dateFormat;\n\n  if (dateParams) {\n    var parsedParams = (0, _moment.default)(dateParams);\n\n    if (parsedParams.isValid()) {\n      return parsedParams;\n    }\n  }\n\n  var parsedInitialDate = parseValue(initialDate, dateFormat);\n\n  if (parsedInitialDate) {\n    return parsedInitialDate;\n  }\n\n  return (0, _moment.default)();\n}\n/** Return initial date if `value` is empty and if `initialDate` provided. */\n\n\nfunction chooseValue(value, initialDate) {\n  if (value === '' && initialDate) {\n    return initialDate;\n  }\n\n  return value;\n}","map":null,"metadata":{},"sourceType":"script"}