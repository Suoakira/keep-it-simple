{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _formsyReact = require('formsy-react');\n\nvar _semanticUiReact = require('semantic-ui-react');\n\nvar _utils = require('./utils');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar FormsyInput = function (_Component) {\n  _inherits(FormsyInput, _Component);\n\n  function FormsyInput() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, FormsyInput);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FormsyInput.__proto__ || Object.getPrototypeOf(FormsyInput)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      allowError: false\n    }, _this.handleChange = function (e, data) {\n      var value = data.value;\n\n      _this.props.setValue(value);\n\n      if (_this.props.onChange) _this.props.onChange(e, data);\n      if (_this.props.instantValidation) _this.showError();\n    }, _this.handleBlur = function (e, data) {\n      _this.showError();\n\n      if (_this.props.onBlur) _this.props.onBlur(e, data);\n    }, _this.showError = function () {\n      return _this.setState({\n        allowError: true\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(FormsyInput, [{\n    key: 'componentDidMount',\n    value: function () {\n      function componentDidMount() {\n        var _props = this.props,\n            defaultValue = _props.defaultValue,\n            setValue = _props.setValue;\n        if (defaultValue) setValue(defaultValue);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function () {\n      function componentWillReceiveProps(nextProps) {\n        if (nextProps.isFormSubmitted()) this.showError();\n      }\n\n      return componentWillReceiveProps;\n    }()\n  }, {\n    key: 'render',\n    value: function () {\n      function render() {\n        var _props2 = this.props,\n            id = _props2.id,\n            inputAs = _props2.inputAs,\n            inputClassName = _props2.inputClassName,\n            required = _props2.required,\n            label = _props2.label,\n            defaultValue = _props2.defaultValue,\n            getValue = _props2.getValue,\n            isValid = _props2.isValid,\n            isPristine = _props2.isPristine,\n            getErrorMessage = _props2.getErrorMessage,\n            errorLabel = _props2.errorLabel,\n            as = _props2.as,\n            width = _props2.width,\n            className = _props2.className,\n            disabled = _props2.disabled,\n            inline = _props2.inline,\n            passRequiredToField = _props2.passRequiredToField;\n        var allowError = this.state.allowError;\n        var error = !isPristine() && !isValid() && allowError;\n\n        var inputProps = _extends({}, (0, _utils.filterSuirElementProps)(this.props), {\n          value: getValue() || isPristine() && defaultValue || '',\n          onChange: this.handleChange,\n          onBlur: this.handleBlur,\n          className: inputClassName,\n          error: !disabled && error,\n          label: label,\n          id: id\n        });\n\n        var shortHandMode = inputAs === _semanticUiReact.Form.Input || inputAs === _semanticUiReact.Form.TextArea;\n        var inputNode = shortHandMode ? (0, _react.createElement)(inputAs).props.control : inputAs;\n\n        if (shortHandMode) {\n          delete inputProps.label;\n          if (inputAs === _semanticUiReact.Form.TextArea) delete inputProps.error;\n        }\n\n        return _react2['default'].createElement(_semanticUiReact.Form.Field, {\n          as: as,\n          className: className,\n          required: required && passRequiredToField,\n          error: !disabled && error,\n          width: width,\n          inline: inline,\n          disabled: disabled\n        }, shortHandMode && _react2['default'].createElement('label', {\n          htmlFor: id\n        }, ' ', label, ' '), (0, _react.createElement)(inputNode, _extends({}, inputProps)), !disabled && error && errorLabel && (0, _react.cloneElement)(errorLabel, {}, getErrorMessage()));\n      }\n\n      return render;\n    }()\n  }]);\n\n  return FormsyInput;\n}(_react.Component);\n\nFormsyInput.propTypes = {\n  id: _propTypes2['default'].string,\n  name: _propTypes2['default'].string.isRequired,\n  as: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].node]),\n  width: _propTypes2['default'].number,\n  className: _propTypes2['default'].string,\n  inputClassName: _propTypes2['default'].string,\n  disabled: _propTypes2['default'].bool,\n  inline: _propTypes2['default'].bool,\n  passRequiredToField: _propTypes2['default'].bool,\n  inputAs: _propTypes2['default'].oneOf([_semanticUiReact.Input, _semanticUiReact.TextArea, _semanticUiReact.Form.Input, _semanticUiReact.Form.TextArea]),\n  errorLabel: _propTypes2['default'].element,\n  required: _propTypes2['default'].bool,\n  label: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].node]),\n  instantValidation: _propTypes2['default'].bool,\n  defaultValue: _propTypes2['default'].string,\n  onBlur: _propTypes2['default'].func,\n  isValid: _propTypes2['default'].func.isRequired,\n  setValue: _propTypes2['default'].func.isRequired,\n  getValue: _propTypes2['default'].func.isRequired,\n  onChange: _propTypes2['default'].func,\n  isPristine: _propTypes2['default'].func.isRequired,\n  getErrorMessage: _propTypes2['default'].func.isRequired,\n  validationError: _propTypes2['default'].string,\n  validationErrors: _propTypes2['default'].object,\n  validations: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].object])\n};\nFormsyInput.defaultProps = {\n  inputAs: _semanticUiReact.Input,\n  passRequiredToField: true\n};\nexports['default'] = (0, _formsyReact.withFormsy)(FormsyInput);","map":null,"metadata":{},"sourceType":"script"}