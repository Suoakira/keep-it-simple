{"ast":null,"code":"import _toConsumableArray from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/components/detailspage.js\";\nimport React, { Component } from 'react';\nimport { Button, Header, Image, Modal, Progress, Statistic, Loader, Segment } from 'semantic-ui-react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Line } from 'rc-progress';\n\nvar DetailsModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DetailsModal, _Component);\n\n  function DetailsModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DetailsModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DetailsModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      usernames: [],\n      amounts: [],\n      users: undefined\n    };\n\n    _this.close = function () {\n      return _this.setState({\n        open: false\n      });\n    };\n\n    _this.getUserName = function (id) {\n      var copyUsers = _toConsumableArray(_this.state.users);\n\n      console.log(copyUsers);\n      var user = copyUsers.filter(function (user) {\n        return user.id === id;\n      });\n      return user[0].username;\n    };\n\n    _this.mapData = function () {\n      _this.state.userSavingTargets.map(function (data) {\n        return _this.setState({\n          usernames: _toConsumableArray(_this.state.usernames).concat([_this.getUserName(data.user_id)]),\n          amounts: _toConsumableArray(_this.state.amounts).concat([data.amount])\n        });\n      });\n    };\n\n    _this.amountToPercent = function () {\n      return _this.props.percentSave / 100;\n    };\n\n    _this.randomNumber = function () {\n      return Math.floor(Math.random() * 60);\n    };\n\n    _this.mapProgressBars = function () {\n      var copyAmounts = _toConsumableArray(_this.state.amounts);\n\n      return copyAmounts.map(function (amount, index) {\n        return React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \" \", _this.state.usernames[index], React.createElement(Progress, {\n          percent: Math.round(_this.randomNumber() * _this.amountToPercent()),\n          size: \"small\",\n          indicating: true,\n          progress: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DetailsModal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/api/v1/users\").then(function (data) {\n        return data.json();\n      }).then(function (users) {\n        return _this2.setState({\n          users: users,\n          data1: {\n            labels: ['Days Passed', \"Days to Go\"],\n            datasets: [{\n              data: [_this2.props.daysSoFar, _this2.props.daysToGo],\n              backgroundColor: ['#f6546a', '#c0d6e4'],\n              hoverBackgroundColor: ['#f6546a', '#c0d6e4']\n            }]\n          },\n          percentToSave: _this2.props.percentSave,\n          userSavingTargets: _this2.props.userSavingTargets.user_saving_targets\n        });\n      }).then(function () {\n        return _this2.mapData();\n      });\n    } // https://github.com/jerairrest/react-chartjs-2 for documentation on carting\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          close = _this$props.close,\n          image = _this$props.image,\n          name = _this$props.name,\n          category = _this$props.category,\n          daysToGo = _this$props.daysToGo,\n          totalDays = _this$props.totalDays,\n          daysSoFar = _this$props.daysSoFar,\n          savingPerDay = _this$props.savingPerDay,\n          leftToSave = _this$props.leftToSave,\n          savedSoFar = _this$props.savedSoFar;\n      var percentToSave = this.state.percentToSave;\n      return this.state.users && this.state.userSavingTargets ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        dimmer: \"blurring\",\n        open: open,\n        onClose: close,\n        closeOnDimmerClick: false,\n        centered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, name), React.createElement(Modal.Content, {\n        image: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Deadline Breakdown\", React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stats-pad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Modal.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Statistic.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Statistic, {\n        color: \"red\",\n        \"text-align\": \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, daysToGo), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Days To Target\"))), React.createElement(Statistic.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Statistic, {\n        color: \"yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, daysSoFar, \"days \"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Savings Streak\"))), React.createElement(Statistic.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Statistic, {\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"\\xA3\", savingPerDay), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Saved Per Day\"))), React.createElement(Statistic.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Statistic, {\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"\\xA3\", savedSoFar), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Total Saved\"))))))), React.createElement(Modal.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Doughnut, {\n        data: this.state.data1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), this.mapProgressBars()[1] ? React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Group Members Saving Progress\", React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.mapProgressBars())) : null, this.props.percentSave ? React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Overall Progress to Funding Goal\", React.createElement(Progress, {\n        percent: 100 - this.props.percentSave,\n        indicating: true,\n        progress: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })) : React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Loading\"), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Button, {\n        primary: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Close\",\n        onClick: close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })))) : React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Loading\");\n    }\n  }]);\n\n  return DetailsModal;\n}(Component);\n\nexport default DetailsModal;","map":{"version":3,"sources":["/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/components/detailspage.js"],"names":["React","Component","Button","Header","Image","Modal","Progress","Statistic","Loader","Segment","Doughnut","Line","DetailsModal","state","usernames","amounts","users","undefined","close","setState","open","getUserName","id","copyUsers","console","log","user","filter","username","mapData","userSavingTargets","map","data","user_id","amount","amountToPercent","props","percentSave","randomNumber","Math","floor","random","mapProgressBars","copyAmounts","index","round","fetch","then","json","data1","labels","datasets","daysSoFar","daysToGo","backgroundColor","hoverBackgroundColor","percentToSave","user_saving_targets","image","name","category","totalDays","savingPerDay","leftToSave","savedSoFar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Header, Image, Modal, Progress, Statistic, Loader, Segment } from 'semantic-ui-react'\nimport { Doughnut } from 'react-chartjs-2';\nimport { Line } from 'rc-progress';\n\nclass DetailsModal extends Component {\n    state = { \n        usernames: [],\n        amounts: [],\n        users: undefined\n     }\n\n    close = () => this.setState({ open: false })\n\n    getUserName = (id) => {\n        const copyUsers = [...this.state.users]\n        console.log(copyUsers)\n        const user = copyUsers.filter(user => user.id === id)\n        return user[0].username\n     }\n\n    mapData = () => {\n         this.state.userSavingTargets.map(data => this.setState({\n             usernames: [...this.state.usernames, this.getUserName(data.user_id)],\n             amounts: [...this.state.amounts, data.amount]\n         })      \n        )\n     }\n\n    amountToPercent = () => {\n        return this.props.percentSave/100\n     }\n\n    // placeholder to simulate number of days\n    randomNumber = () => {\n        return Math.floor(Math.random() * 60)  \n     }\n\n    // placeholder to simulate number of days\n    mapProgressBars = () => {\n        const copyAmounts = [...this.state.amounts]\n        return copyAmounts.map((amount, index) => \n        <Header> {this.state.usernames[index]}\n                <Progress percent={Math.round(this.randomNumber() * this.amountToPercent())} size='small' indicating progress />\n        </Header> )\n     }\n\n    componentWillMount() {\n        fetch(\"http://localhost:3000/api/v1/users\")\n            .then(data => data.json())\n            .then(users => \n                this.setState({\n                users: users,\n                data1: {\n                    labels: [\n                        'Days Passed',\n                        \"Days to Go\"\n                    ],\n                    datasets: [{\n                        data: [this.props.daysSoFar, this.props.daysToGo],\n                        backgroundColor: [\n                            '#f6546a',\n                            '#c0d6e4',\n\n                        ],\n                        hoverBackgroundColor: [\n                            '#f6546a',\n                            '#c0d6e4',\n                        ]\n                    }]\n                },\n                percentToSave: this.props.percentSave,\n                userSavingTargets: this.props.userSavingTargets.user_saving_targets\n            })\n        ).then(() => this.mapData())\n    }\n    // https://github.com/jerairrest/react-chartjs-2 for documentation on carting\n    render() {\n        const { open, close, image, name, category, daysToGo, totalDays, daysSoFar, savingPerDay, leftToSave, savedSoFar } = this.props\n        const { percentToSave } = this.state\n        return (\n            this.state.users && this.state.userSavingTargets ?\n                \n           \n            <div>\n\n           \n                <Modal dimmer=\"blurring\" open={open} onClose={close} closeOnDimmerClick={false} centered={false}>\n                    <Modal.Header>{name}</Modal.Header>\n                    \n                    <Modal.Content image>\n                        <Header>Deadline Breakdown\n                            <Segment>\n                                <div className=\"stats-pad\">\n                                \n                                    <Modal.Description>\n                                            \n                                        <Statistic.Group>\n                                            <Statistic color='red' text-align='center'>\n                                                <Statistic.Value>{daysToGo}</Statistic.Value>\n                                                <Statistic.Label>Days To Target</Statistic.Label>\n                                            </Statistic>\n                                        </Statistic.Group>\n                                        <Statistic.Group>\n                                            \n                                            <Statistic color='yellow'>\n                                                <Statistic.Value>{daysSoFar}days </Statistic.Value>\n                                                <Statistic.Label>Savings Streak</Statistic.Label>\n                                            </Statistic>\n                                        </Statistic.Group>\n                                        <Statistic.Group>\n                                            <Statistic color='olive'>\n                                                <Statistic.Value>£{savingPerDay}</Statistic.Value>\n                                                <Statistic.Label>Saved Per Day</Statistic.Label>\n                                            </Statistic>\n                                        </Statistic.Group>\n                                        <Statistic.Group>\n\n                                            <Statistic color='teal'>\n                                                <Statistic.Value>£{savedSoFar}</Statistic.Value>\n                                                <Statistic.Label>Total Saved</Statistic.Label>\n                                            </Statistic>\n                                        </Statistic.Group>\n                                    </Modal.Description>\n                                \n                                </div>\n                            </Segment>\n                            </Header>\n                            <Modal.Description>\n                                <Doughnut data={this.state.data1} /> \n                            </Modal.Description>\n                    </Modal.Content>\n                        {this.mapProgressBars()[1] ?\n                            <Header>Group Members Saving Progress\n                                <Segment>\n                                    {this.mapProgressBars()}\n                                </Segment>\n                            </Header>\n                            :\n                            null\n                            }\n                        {this.props.percentSave?\n                        <Header>Overall Progress to Funding Goal\n                            <Progress percent={100 - this.props.percentSave} indicating progress />  \n                        </Header>   \n                        :\n                        <Loader>Loading</Loader>\n                        }\n                        \n                    <Modal.Actions>\n                        <Button\n                            primary\n                            icon='checkmark'\n                            labelPosition='right'\n                            content=\"Close\"\n                            onClick={close}\n                        />\n                    </Modal.Actions>\n                    \n                </Modal>\n            </div>\n            :\n            <Loader>Loading</Loader>\n            \n        )\n    }\n}\n\nexport default DetailsModal"]},"metadata":{},"sourceType":"module"}