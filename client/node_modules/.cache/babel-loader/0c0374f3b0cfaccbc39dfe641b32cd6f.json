{"ast":null,"code":"import _classCallCheck from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/components/detailspage.js\";\nimport React, { Component } from 'react';\nimport { Button, Header, Image, Modal, Progress } from 'semantic-ui-react';\nimport { Doughnut, Statistic } from 'react-chartjs-2';\n\nvar ModalExampleDimmer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalExampleDimmer, _Component);\n\n  function ModalExampleDimmer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModalExampleDimmer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModalExampleDimmer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.close = function () {\n      return _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalExampleDimmer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data1: {\n          labels: ['Days Passed', \"Days to Go\"],\n          datasets: [{\n            data: [this.props.daysSoFar, this.props.daysToGo],\n            backgroundColor: ['#FF6384', '#FFCE56'],\n            hoverBackgroundColor: ['#FF6384', '#FFCE56']\n          }]\n        },\n        percentToSave: this.props.percentSave\n      });\n    } // https://github.com/jerairrest/react-chartjs-2 for documentation on carting\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          close = _this$props.close,\n          image = _this$props.image,\n          name = _this$props.name,\n          category = _this$props.category,\n          daysToGo = _this$props.daysToGo,\n          totalDays = _this$props.totalDays,\n          daysSoFar = _this$props.daysSoFar,\n          savingPerDay = _this$props.savingPerDay,\n          leftToSave = _this$props.leftToSave,\n          savedSoFar = _this$props.savedSoFar;\n      var percentToSave = this.state.percentToSave;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        dimmer: \"blurring\",\n        open: open,\n        onClose: close,\n        closeOnDimmerClick: false,\n        centered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, name), React.createElement(Modal.Content, {\n        image: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Modal.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, category), React.createElement(Statistic.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Statistic, {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"27\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"red\")), React.createElement(Statistic, {\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"8'\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"orange\")), React.createElement(Statistic, {\n        color: \"yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"28\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"yellow\")), React.createElement(Statistic, {\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"7'\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"olive\")), React.createElement(Statistic, {\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"14\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"green\")), React.createElement(Statistic, {\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"82\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"teal\")), React.createElement(Statistic, {\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"1'\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"blue\")), React.createElement(Statistic, {\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"22\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"violet\")), React.createElement(Statistic, {\n        color: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"23\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"purple\")), React.createElement(Statistic, {\n        color: \"pink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"15\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"pink\")), React.createElement(Statistic, {\n        color: \"brown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"36\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"brown\")), React.createElement(Statistic, {\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"49\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"grey\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" If you continue you\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Day: \", daysToGo), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Plan Duration in days\", totalDays), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Days that have passed: \", daysSoFar), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Amount saved per day: \\xA3\", savingPerDay), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Total amount left to save: \\xA3\", leftToSave), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Amount you have saved so far:\\xA3\", savedSoFar)), React.createElement(Modal.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Doughnut, {\n        data: this.state.data1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))), React.createElement(Progress, {\n        percent: 100 - this.props.perventSave,\n        indicating: true,\n        progress: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Button, {\n        primary: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Close\",\n        onClick: close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ModalExampleDimmer;\n}(Component);\n\nexport default ModalExampleDimmer;","map":{"version":3,"sources":["/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/components/detailspage.js"],"names":["React","Component","Button","Header","Image","Modal","Progress","Doughnut","Statistic","ModalExampleDimmer","state","close","setState","open","data1","labels","datasets","data","props","daysSoFar","daysToGo","backgroundColor","hoverBackgroundColor","percentToSave","percentSave","image","name","category","totalDays","savingPerDay","leftToSave","savedSoFar","perventSave"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Header, Image, Modal, Progress } from 'semantic-ui-react'\nimport { Doughnut, Statistic } from 'react-chartjs-2';\n\nclass ModalExampleDimmer extends Component {\n    state = { \n        \n     }\n\n\n    close = () => this.setState({ open: false })\n\n    componentDidMount() {\n        this.setState({\n            data1: {\n                labels: [\n                    'Days Passed',\n                    \"Days to Go\" \n                ],\n                datasets: [{\n                    data: [this.props.daysSoFar, this.props.daysToGo],\n                    backgroundColor: [\n                        '#FF6384',\n                        '#FFCE56',\n                        \n                    ],\n                    hoverBackgroundColor: [\n                        '#FF6384',\n                        '#FFCE56',    \n                    ]\n                }]\n            },\n            percentToSave: this.props.percentSave\n        })\n        \n    }\n    // https://github.com/jerairrest/react-chartjs-2 for documentation on carting\n    render() {\n        const { open, close, image, name, category, daysToGo, totalDays, daysSoFar, savingPerDay, leftToSave, savedSoFar } = this.props\n        const { percentToSave } = this.state\n\n\n\n        return (\n            <div>\n\n                <Modal dimmer=\"blurring\" open={open} onClose={close} closeOnDimmerClick={false} centered={false}>\n                    <Modal.Header>{name}</Modal.Header>\n                    <Modal.Content image>\n                \n                        <Modal.Description>\n                            <Header>{category}</Header>\n                            <Statistic.Group>\n                                <Statistic color='red'>\n                                    <Statistic.Value>27</Statistic.Value>\n                                    <Statistic.Label>red</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='orange'>\n                                    <Statistic.Value>8'</Statistic.Value>\n                                    <Statistic.Label>orange</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='yellow'>\n                                    <Statistic.Value>28</Statistic.Value>\n                                    <Statistic.Label>yellow</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='olive'>\n                                    <Statistic.Value>7'</Statistic.Value>\n                                    <Statistic.Label>olive</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='green'>\n                                    <Statistic.Value>14</Statistic.Value>\n                                    <Statistic.Label>green</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='teal'>\n                                    <Statistic.Value>82</Statistic.Value>\n                                    <Statistic.Label>teal</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='blue'>\n                                    <Statistic.Value>1'</Statistic.Value>\n                                    <Statistic.Label>blue</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='violet'>\n                                    <Statistic.Value>22</Statistic.Value>\n                                    <Statistic.Label>violet</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='purple'>\n                                    <Statistic.Value>23</Statistic.Value>\n                                    <Statistic.Label>purple</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='pink'>\n                                    <Statistic.Value>15</Statistic.Value>\n                                    <Statistic.Label>pink</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='brown'>\n                                    <Statistic.Value>36</Statistic.Value>\n                                    <Statistic.Label>brown</Statistic.Label>\n                                </Statistic>\n                                <Statistic color='grey'>\n                                    <Statistic.Value>49</Statistic.Value>\n                                    <Statistic.Label>grey</Statistic.Label>\n                                </Statistic>\n                            </Statistic.Group>\n                            \n                            <p> If you continue you</p>\n                            <p>Day: {daysToGo}</p>\n                            <p>Plan Duration in days{totalDays}</p>\n                            <p>Days that have passed: {daysSoFar}</p>\n                            <p>Amount saved per day: £{savingPerDay}</p>\n                            <p>Total amount left to save: £{leftToSave}</p>\n                            <p>Amount you have saved so far:£{savedSoFar}</p>\n                                  \n                      \n                           \n\n                        </Modal.Description>\n                        <Modal.Description>\n                            <Doughnut data={this.state.data1} /> \n                        </Modal.Description>\n                        \n                    </Modal.Content>\n                    <Progress percent={100 - this.props.perventSave} indicating progress />   \n                    <Modal.Actions>\n\n                        <Button\n                            primary\n                            icon='checkmark'\n                            labelPosition='right'\n                            content=\"Close\"\n                            onClick={close}\n                        />\n                    </Modal.Actions>\n                    \n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ModalExampleDimmer"]},"metadata":{},"sourceType":"module"}