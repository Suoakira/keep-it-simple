{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _DatesRangeView = _interopRequireDefault(require(\"../../views/DatesRangeView\"));\n\nvar _DayPicker = require(\"./DayPicker\");\n\nvar _lib = require(\"../../lib\");\n\nvar _sharedFunctions = require(\"./sharedFunctions\");\n\nvar _BasePicker2 = _interopRequireDefault(require(\"../BasePicker\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar PAGE_WIDTH = 7;\n/** Return position of a given date on the page.\n * \n * Page consists of some dates from previous month, dates from current month\n * and some dates from next month.\n * Return undefined if date that is under test is out of page.\n * \n * @param {Moment} prevMonth \n * @param {Moment} currentMonth \n * @param {Moment} nextMonth \n * @param {Moment} date Date to test\n * @param {number[]} fromPrevMonthDates \n * @param {number[]} fromCurrentMonthDates \n * @param {number[]} fromNextMonthDates \n */\n\nfunction getDatePosition(prevMonth, currentMonth, nextMonth, date, fromPrevMonthDates, fromCurrentMonthDates, fromNextMonthDates) {\n  if (date.isSame(prevMonth, 'month')) {\n    var position = fromPrevMonthDates.indexOf(date.date());\n\n    if (position >= 0) {\n      return position;\n    }\n  }\n\n  if (date.isSame(currentMonth, 'month')) {\n    return fromCurrentMonthDates.indexOf(date.date()) + fromPrevMonthDates.length;\n  }\n\n  if (date.isSame(nextMonth, 'month')) {\n    var _position = fromNextMonthDates.indexOf(date.date());\n\n    if (_position >= 0) {\n      return _position + fromPrevMonthDates.length + fromCurrentMonthDates.length;\n    }\n  }\n}\n\nfunction getDatesFromPrevMonth(date, allDays, currentMonthStartPosition) {\n  if (currentMonthStartPosition === 0) {\n    return [];\n  }\n\n  return allDays.slice(0, currentMonthStartPosition).map(function (date) {\n    return parseInt(date);\n  });\n}\n\nfunction getDatesFromNextMonth(date, allDays, nextMonthStartPosition) {\n  if (nextMonthStartPosition === allDays.length) {\n    return [];\n  }\n\n  return allDays.slice(nextMonthStartPosition, allDays.length).map(function (date) {\n    return parseInt(date);\n  });\n}\n/** Build moment based on current page and date position on that page. */\n\n\nfunction buildMoment(date\n/*Moment*/\n, firstOnPage\n/*number*/\n, dateToBuildPosition\n/*number*/\n) {\n  var result;\n\n  if (firstOnPage === 1\n  /* page starts from first day in month */\n  ) {\n      result = (0, _moment.default)({\n        year: date.year(),\n        month: date.month(),\n        date: firstOnPage\n      });\n    } else {\n    /* page starts from day in previous month */\n    result = (0, _moment.default)({\n      year: date.month() ? date.year() : date.year() - 1,\n      month: (date.month() + 11) % 12,\n      date: firstOnPage\n    });\n  }\n\n  result.add(dateToBuildPosition, 'day');\n  return result;\n}\n\nvar DatesRangePicker =\n/*#__PURE__*/\nfunction (_BasePicker) {\n  _inherits(DatesRangePicker, _BasePicker);\n\n  function DatesRangePicker(props) {\n    var _this;\n\n    _classCallCheck(this, DatesRangePicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DatesRangePicker).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getSelectableCellPositions\", function () {\n      return _lodash.default.filter(_lodash.default.range(0, _DayPicker.DAYS_ON_PAGE), function (d) {\n        return !_lodash.default.includes(_this.getDisabledDaysPositions(), d);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getInitialDatePosition\", function () {\n      return _this.buildCalendarValues().indexOf(_this.state.date.date().toString());\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (e, _ref) {\n      var itemPosition = _ref.itemPosition; // call `onChange` with value: { start: moment, end: moment }\n\n      var _this$props = _this.props,\n          start = _this$props.start,\n          end = _this$props.end;\n      var firstOnPage = parseInt(_this.buildCalendarValues()[0]);\n\n      if (_lodash.default.isNil(start) && _lodash.default.isNil(end)) {\n        var range = {\n          start: buildMoment(_this.state.date, firstOnPage, itemPosition)\n        };\n\n        _lodash.default.invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n          value: range\n        }));\n      } else if (!_lodash.default.isNil(start) && _lodash.default.isNil(end)) {\n        var selectedDate = buildMoment(_this.state.date, firstOnPage, itemPosition);\n\n        if (selectedDate.isAfter(start, 'date')) {\n          var _range = {\n            start: start,\n            end: selectedDate\n          };\n\n          _lodash.default.invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n            value: _range\n          }));\n        } else {\n          _lodash.default.invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n            value: {}\n          }));\n        }\n      } else {\n        _lodash.default.invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n          value: {}\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"switchToNextPage\", function () {\n      _this.setState(function (_ref2) {\n        var date = _ref2.date;\n        var nextDate = date.clone();\n        nextDate.add(1, 'month');\n        return {\n          date: nextDate\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"switchToPrevPage\", function () {\n      _this.setState(function (_ref3) {\n        var date = _ref3.date;\n        var prevDate = date.clone();\n        prevDate.subtract(1, 'month');\n        return {\n          date: prevDate\n        };\n      });\n    });\n\n    _this.state = {\n      /* moment instance */\n      date: props.initializeWith.clone()\n    };\n    _this.PAGE_WIDTH = PAGE_WIDTH;\n    return _this;\n  }\n\n  _createClass(DatesRangePicker, [{\n    key: \"buildCalendarValues\",\n    value: function buildCalendarValues() {\n      /*\n        Return array of dates (strings) like ['31', '1', ...]\n        that used to populate calendar's page.\n      */\n      return (0, _sharedFunctions.buildDays)(this.state.date, _DayPicker.DAYS_ON_PAGE);\n    }\n  }, {\n    key: \"getActiveCellsPositions\",\n    // TODO: too complicated method\n    value: function getActiveCellsPositions() {\n      /*\n        Return starting and ending positions of dates range that should be displayed as active\n        { start: number, end: number }\n        (position in array returned by `this.buildCalendarValues`).\n      */\n      var date = this.state.date;\n      var _this$props2 = this.props,\n          start = _this$props2.start,\n          end = _this$props2.end;\n      var allDays = this.buildCalendarValues();\n      var fromCurrentMonthDayPositions = (0, _sharedFunctions.getDefaultEnabledDayPositions)(allDays, date);\n      var fromPrevMonthDates = getDatesFromPrevMonth(date, allDays, fromCurrentMonthDayPositions[0]);\n      var fromNextMonthDates = getDatesFromNextMonth(date, allDays, _lodash.default.last(fromCurrentMonthDayPositions) + 1);\n\n      var fromCurrentMonthDates = _lodash.default.range(1, this.state.date.daysInMonth() + 1);\n\n      var prevMonth = date.clone();\n      prevMonth.subtract(1, 'month');\n      var nextMonth = date.clone();\n      nextMonth.add(1, 'month');\n\n      if (start && end) {\n        var startPosition = getDatePosition(prevMonth, this.state.date, nextMonth, start, fromPrevMonthDates, fromCurrentMonthDates, fromNextMonthDates);\n        var endPosition = getDatePosition(prevMonth, this.state.date, nextMonth, end, fromPrevMonthDates, fromCurrentMonthDates, fromNextMonthDates);\n\n        if (startPosition && endPosition) {\n          return {\n            start: startPosition,\n            end: endPosition\n          };\n        }\n\n        if (startPosition) {\n          return {\n            start: startPosition,\n            end: _DayPicker.DAYS_ON_PAGE - 1\n          };\n        }\n\n        if (endPosition) {\n          return {\n            start: 0,\n            end: endPosition\n          };\n        }\n\n        if (this.state.date.isBetween(start, end)) {\n          return {\n            start: 0,\n            end: _DayPicker.DAYS_ON_PAGE - 1\n          };\n        }\n      }\n\n      if (start) {\n        var _startPosition = getDatePosition(prevMonth, this.state.date, nextMonth, start, fromPrevMonthDates, fromCurrentMonthDates, fromNextMonthDates);\n\n        return {\n          start: _startPosition,\n          end: undefined\n        };\n      }\n\n      return {\n        start: undefined,\n        end: undefined\n      };\n    }\n  }, {\n    key: \"getDisabledDaysPositions\",\n    value: function getDisabledDaysPositions() {\n      /*\n        Return position numbers of dates that should be displayed as disabled\n        (position in array returned by `this.buildCalendarValues`).\n      */\n      var _this$props3 = this.props,\n          maxDate = _this$props3.maxDate,\n          minDate = _this$props3.minDate;\n      return (0, _sharedFunctions.getDisabledDays)(undefined, maxDate, minDate, this.state.date, _DayPicker.DAYS_ON_PAGE);\n    }\n  }, {\n    key: \"isNextPageAvailable\",\n    value: function isNextPageAvailable() {\n      return (0, _sharedFunctions.isNextPageAvailable)(this.state.date, this.props.maxDate);\n    }\n  }, {\n    key: \"isPrevPageAvailable\",\n    value: function isPrevPageAvailable() {\n      return (0, _sharedFunctions.isPrevPageAvailable)(this.state.date, this.props.minDate);\n    }\n  }, {\n    key: \"getCurrentDate\",\n    value: function getCurrentDate() {\n      /* Return currently selected year and month(string) to display in calendar header. */\n      return this.state.date.format('MMMM YYYY');\n    }\n  }, {\n    key: \"getSelectedRange\",\n    value: function getSelectedRange() {\n      /* Return currently selected dates range(string) to display in calendar header. */\n      var _this$props4 = this.props,\n          start = _this$props4.start,\n          end = _this$props4.end,\n          dateFormat = _this$props4.dateFormat;\n      return \"\".concat(start ? start.format(dateFormat) : '- - -', \" - \").concat(end ? end.format(dateFormat) : '- - -');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rest = (0, _lib.getUnhandledProps)(DatesRangePicker, this.props);\n      return _react.default.createElement(_DatesRangeView.default, _extends({}, rest, {\n        days: this.buildCalendarValues(),\n        onNextPageBtnClick: this.switchToNextPage,\n        onPrevPageBtnClick: this.switchToPrevPage,\n        onCellHover: this.onHoveredCellPositionChange,\n        hovered: this.state.hoveredCellPosition,\n        onDayClick: this.handleChange,\n        inline: this.props.inline,\n        hasPrevPage: this.isPrevPageAvailable(),\n        hasNextPage: this.isNextPageAvailable(),\n        onBlur: this.handleBlur,\n        onMount: this.props.onCalendarViewMount,\n        currentDate: this.getCurrentDate(),\n        selectedRange: this.getSelectedRange(),\n        active: this.getActiveCellsPositions(),\n        disabled: this.getDisabledDaysPositions()\n      }));\n    }\n  }]);\n\n  return DatesRangePicker;\n}(_BasePicker2.default);\n\n_defineProperty(DatesRangePicker, \"handledProps\", [\"closePopup\", \"dateFormat\", \"end\", \"initializeWith\", \"inline\", \"isPickerInFocus\", \"isTriggerInFocus\", \"maxDate\", \"minDate\", \"onCalendarViewMount\", \"onChange\", \"start\"]);\n\nDatesRangePicker.propTypes = {\n  /** Called after day is selected. */\n  onChange: _propTypes.default.func.isRequired,\n\n  /** A value for initializing day picker's state. */\n  initializeWith: _propTypes.default.instanceOf(_moment.default).isRequired,\n\n  /** Moment date formatting string. */\n  dateFormat: _propTypes.default.string.isRequired,\n\n  /** Start of currently selected dates range. */\n  start: _propTypes.default.instanceOf(_moment.default),\n\n  /** End of currently selected dates range. */\n  end: _propTypes.default.instanceOf(_moment.default),\n\n  /** Minimal date that could be selected. */\n  minDate: _propTypes.default.instanceOf(_moment.default),\n\n  /** Maximal date that could be selected. */\n  maxDate: _propTypes.default.instanceOf(_moment.default),\n  isPickerInFocus: _propTypes.default.func,\n  isTriggerInFocus: _propTypes.default.func,\n  onCalendarViewMount: _propTypes.default.func,\n\n  /** Force popup to close. */\n  closePopup: _propTypes.default.func,\n  inline: _propTypes.default.bool\n};\nvar _default = DatesRangePicker;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}