{"ast":null,"code":"import _toConsumableArray from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/containers/planhistory.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Table, Loader, Segment, Header } from 'semantic-ui-react';\nimport HistoryRow from \"../components/historyrow\";\n\nvar PlanHistory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlanHistory, _Component);\n\n  function PlanHistory(props) {\n    var _this;\n\n    _classCallCheck(this, PlanHistory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlanHistory).call(this, props));\n\n    _this.noDaysBetween = function (date1, date2) {\n      var oneDay = 24 * 60 * 60 * 1000;\n      var daysToGo = Math.round(Math.abs((date2.getTime() - date1.getTime()) / oneDay));\n      return daysToGo;\n    };\n\n    _this.getAmount = function (targets) {\n      var amount = 0;\n\n      if (!!targets.user_saving_targets[1]) {\n        targets.user_saving_targets.forEach(function (target) {\n          return amount += target.amount;\n        });\n      } else {\n        amount = targets.user_saving_targets[0].amount;\n      }\n\n      return amount;\n    };\n\n    _this.mapTableRows = function () {\n      var copyTargets = _toConsumableArray(_this.state.savingTargets);\n\n      return copyTargets.map(function (target) {\n        return console.log(Date.now);\n      });\n      {\n        /* <HistoryRow name={target.name} category={target.category} amount={this.getAmount(target)} daysToGo={this.noDaysBetween(Date.now, )} /> ) */\n      }\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PlanHistory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(this.props.userId)).then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        return _this2.setState({\n          storedUserDetails: data,\n          savingTargets: data.saving_targets\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var username = this.props.username;\n      return username ? React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Upcoming Plans\", React.createElement(Header.Subheader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"A collection of your upcoming saving goals.\"))), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Table, {\n        celled: true,\n        inverted: true,\n        selectable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Plan Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Days till Plan Start\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Saving Goal (\\xA3)\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Category\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.savingTargets ? this.mapTableRows() : null)))), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Expired Plans\", React.createElement(Header.Subheader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"A collection of your past saving goals.\"))), React.createElement(Table, {\n        celled: true,\n        inverted: true,\n        selectable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Plan Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Compleated On\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Amount Raised (\\xA3)\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Category\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(HistoryRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(HistoryRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(HistoryRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(HistoryRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(HistoryRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(HistoryRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PlanHistory;\n}(Component);\n\nexport default PlanHistory;","map":{"version":3,"sources":["/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/containers/planhistory.js"],"names":["React","Component","Redirect","Table","Loader","Segment","Header","HistoryRow","PlanHistory","props","noDaysBetween","date1","date2","oneDay","daysToGo","Math","round","abs","getTime","getAmount","targets","amount","user_saving_targets","forEach","target","mapTableRows","copyTargets","state","savingTargets","map","console","log","Date","now","fetch","userId","then","resp","json","data","setState","storedUserDetails","saving_targets","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport { Table, Loader, Segment, Header } from 'semantic-ui-react'\nimport HistoryRow from \"../components/historyrow\"\n\nclass PlanHistory extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    \n\n    noDaysBetween = (date1, date2) => {\n        const oneDay = 24 * 60 * 60 * 1000\n        const daysToGo = Math.round(Math.abs((date2.getTime() - date1.getTime()) / (oneDay)))\n        return daysToGo\n    }\n\n    getAmount = (targets) => {\n        let amount = 0\n        if (!!targets.user_saving_targets[1]) {\n            targets.user_saving_targets.forEach(target => amount += target.amount)\n        } else {\n            amount = targets.user_saving_targets[0].amount\n        }\n        return amount\n    }\n\n    mapTableRows = () => {\n        const copyTargets = [...this.state.savingTargets]\n        return copyTargets.map(target => console.log(Date.now) )\n        {/* <HistoryRow name={target.name} category={target.category} amount={this.getAmount(target)} daysToGo={this.noDaysBetween(Date.now, )} /> ) */}\n    }\n\n\n    componentDidMount() {\n        fetch(`http://localhost:3000/api/v1/users/${this.props.userId}`)\n            .then(resp => resp.json())\n            .then(data => this.setState({ \n                storedUserDetails: data,\n                savingTargets: data.saving_targets\n             })\n        )\n    }\n    \n    render() {\n        const { username } = this.props\n        return (\n            username ?\n                <div className=\"wrapper\">\n                    <Segment>\n                    <Segment>\n                        <Header size='large'>Upcoming Plans\n                            <Header.Subheader>A collection of your upcoming saving goals.</Header.Subheader>\n                        </Header>\n                    </Segment>\n                    \n                   <Segment>\n                    <Table celled inverted selectable>\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Plan Name</Table.HeaderCell>\n                                <Table.HeaderCell>Days till Plan Start</Table.HeaderCell>\n                                <Table.HeaderCell>Saving Goal (£)</Table.HeaderCell>\n                                <Table.HeaderCell>Category</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                            {this.state.savingTargets ?\n                                this.mapTableRows()\n                                :\n                                null\n                            }\n                        </Table.Body>\n                    </Table>\n                    </Segment>\n                    </Segment>\n\n                    <Segment>\n                        <Segment>\n                            <Header size='large'>Expired Plans\n                            <Header.Subheader>A collection of your past saving goals.</Header.Subheader>\n                            </Header>\n                        </Segment>\n\n\n                    <Table celled inverted selectable>\n                        <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Plan Name</Table.HeaderCell>\n                            <Table.HeaderCell>Compleated On</Table.HeaderCell>\n                            <Table.HeaderCell>Amount Raised (£)</Table.HeaderCell>\n                            <Table.HeaderCell>Category</Table.HeaderCell>\n                        </Table.Row>\n                        </Table.Header>\n\n                    <Table.Body>\n                            <HistoryRow />\n                            <HistoryRow />\n                            <HistoryRow />\n                            <HistoryRow />\n                            <HistoryRow />\n                            <HistoryRow />\n                    </Table.Body>\n                    </Table>\n                    </Segment>\n                </div>\n                :\n                <div>\n                    <Redirect\n                        to=\"/login\" />\n                </div>\n\n        )\n    }\n}\n\nexport default PlanHistory;"]},"metadata":{},"sourceType":"module"}