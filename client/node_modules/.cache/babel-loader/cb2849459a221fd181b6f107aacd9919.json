{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _keyboardKey = _interopRequireDefault(require(\"keyboard-key\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar BasePicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BasePicker, _React$Component);\n\n  function BasePicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BasePicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BasePicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onHoveredCellPositionChange\", function (e, _ref) {\n      var itemPosition = _ref.itemPosition;\n\n      _this.setState({\n        hoveredCellPosition: itemPosition\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"canCalendarCatchKeyboardEvents\", function () {\n      if (_this.props.inline) {\n        return _this.props.isPickerInFocus();\n      }\n\n      return _this.props.isTriggerInFocus();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleKeyPress\", function (event) {\n      if (!_this.canCalendarCatchKeyboardEvents()) {\n        return;\n      }\n\n      var key = _keyboardKey.default.getKey(event);\n\n      switch (key) {\n        case 'Enter':\n          _this.handleEnterKeyPress(event);\n\n          break;\n\n        default:\n          _this.handleArrowKeyPress(event);\n\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleEnterKeyPress\", function (event) {\n      var key = _keyboardKey.default.getKey(event);\n\n      if (key === 'Enter' && _this.canCalendarCatchKeyboardEvents()) {\n        event.preventDefault();\n\n        var selectedValue = _this.buildCalendarValues()[_this.state.hoveredCellPosition];\n\n        _this.handleChange(null, {\n          value: selectedValue,\n          itemPosition: _this.state.hoveredCellPosition\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleBlur\", function () {\n      _this.props.closePopup && _this.props.closePopup();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleArrowKeyPress\", function (event) {\n      if (!_this.canCalendarCatchKeyboardEvents()) {\n        return;\n      }\n\n      var key = _keyboardKey.default.getKey(event);\n\n      var selectableCells = _this.getSelectableCellPositions();\n\n      var nextSelectableCellPositionLeft = selectableCells.slice(0, selectableCells.indexOf(_this.state.hoveredCellPosition)).pop();\n      var nextSelectableCellPositionRight = selectableCells.slice(selectableCells.indexOf(_this.state.hoveredCellPosition) + 1)[0];\n\n      switch (key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n\n          if (nextSelectableCellPositionLeft) {\n            _this.onHoveredCellPositionChange(null, {\n              itemPosition: nextSelectableCellPositionLeft\n            });\n          } else {\n            _this.isPrevPageAvailable() && _this.switchToPrevPage(null, null, function () {\n              var selectableCells = _this.getSelectableCellPositions();\n\n              _this.onHoveredCellPositionChange(null, {\n                itemPosition: selectableCells[selectableCells.length - 1]\n              });\n            });\n          }\n\n          break;\n\n        case 'ArrowRight':\n          event.preventDefault();\n\n          if (nextSelectableCellPositionRight) {\n            _this.onHoveredCellPositionChange(null, {\n              itemPosition: nextSelectableCellPositionRight\n            });\n          } else {\n            _this.isNextPageAvailable() && _this.switchToNextPage(null, null, function () {\n              var selectableCells = _this.getSelectableCellPositions();\n\n              _this.onHoveredCellPositionChange(null, {\n                itemPosition: selectableCells[0]\n              });\n            });\n          }\n\n          break;\n\n        case 'ArrowUp':\n          event.preventDefault();\n\n          if (_lodash.default.includes(selectableCells, _this.state.hoveredCellPosition - _this.PAGE_WIDTH)) {\n            _this.onHoveredCellPositionChange(null, {\n              itemPosition: _this.state.hoveredCellPosition - _this.PAGE_WIDTH\n            });\n          }\n\n          break;\n\n        case 'ArrowDown':\n          event.preventDefault();\n\n          if (_lodash.default.includes(selectableCells, _this.state.hoveredCellPosition + _this.PAGE_WIDTH)) {\n            _this.onHoveredCellPositionChange(null, {\n              itemPosition: _this.state.hoveredCellPosition + _this.PAGE_WIDTH\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(BasePicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        hoveredCellPosition: this.getActiveCellPosition && this.getActiveCellPosition() || this.getInitialDatePosition()\n      });\n      document.addEventListener('keydown', this.handleKeyPress);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleKeyPress);\n    }\n  }]);\n\n  return BasePicker;\n}(_react.default.Component);\n\nvar _default = BasePicker;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}