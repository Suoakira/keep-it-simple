{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _semanticUiReact = require(\"semantic-ui-react\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _Cell = _interopRequireDefault(require(\"./Cell\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar cellStyleWidth3 = {\n  width: '33.333333%',\n  minWidth: '7em'\n};\nvar cellStyleWidth4 = {\n  width: '25%'\n};\nvar cellStyleWidth7 = {\n  width: '14.285714%'\n};\n\nfunction buildRows(data\n/*array*/\n, width\n/*number*/\n) {\n  var height = data.length / width;\n  var rows = [];\n\n  for (var i = 0; i < height; i++) {\n    rows.push(data.slice(i * width, i * width + width));\n  }\n\n  return rows;\n}\n\nfunction isActive(rowIndex, rowWidth, colIndex, active) {\n  if (_lodash.default.isNil(active)) return false;\n\n  if (_lodash.default.isArray(active)) {\n    for (var i = 0; i < active.length; i++) {\n      if (rowIndex * rowWidth + colIndex === active[i]) return true;\n    }\n  }\n\n  return rowIndex * rowWidth + colIndex === active;\n}\n\nfunction isHovered(rowIndex, rowWidth, colIndex, hovered) {\n  if (_lodash.default.isNil(hovered)) return false;\n  return rowIndex * rowWidth + colIndex === hovered;\n}\n\nfunction isDisabled(rowIndex, rowWidth, colIndex, disabledIndexes) {\n  if (_lodash.default.isNil(disabledIndexes) || disabledIndexes.length === 0) return false;\n\n  for (var i = 0; i < disabledIndexes.length; i++) {\n    if (rowIndex * rowWidth + colIndex === disabledIndexes[i]) return true;\n  }\n\n  return false;\n}\n\nfunction getCellStyle(width) {\n  if (width === '3') {\n    return cellStyleWidth3;\n  }\n\n  if (width === '4') {\n    return cellStyleWidth4;\n  }\n\n  if (width === '7') {\n    return cellStyleWidth7;\n  }\n\n  return;\n}\n\nfunction Body(props) {\n  var data = props.data,\n      width = props.width,\n      onCellClick = props.onCellClick,\n      active = props.active,\n      disabled = props.disabled,\n      hovered = props.hovered,\n      onCellHover = props.onCellHover;\n  var content = buildRows(data, parseInt(width)).map(function (row, rowIndex) {\n    return _react.default.createElement(_semanticUiReact.Table.Row, {\n      key: \"\".concat(rowIndex).concat(row[0])\n    }, row.map(function (item, itemIndex) {\n      return _react.default.createElement(_Cell.default, {\n        style: getCellStyle(width),\n        active: isActive(rowIndex, parseInt(width), itemIndex, active),\n        hovered: isHovered(rowIndex, parseInt(width), itemIndex, hovered),\n        disabled: isDisabled(rowIndex, parseInt(width), itemIndex, disabled),\n        key: \"\".concat(rowIndex * width + itemIndex),\n        itemPosition: rowIndex * width + itemIndex,\n        content: item,\n        onHover: onCellHover,\n        onClick: onCellClick\n      });\n    }));\n  });\n  return _react.default.createElement(_semanticUiReact.Table.Body, null, content);\n}\n\nBody.handledProps = [\"active\", \"data\", \"disabled\", \"hovered\", \"onCellClick\", \"onCellHover\", \"width\"];\nBody.propTypes = {\n  /** A number of columns in a row. */\n  width: _propTypes.default.oneOf(['3', '4', '7']).isRequired,\n\n  /** Data that is used to fill a calendar. */\n  data: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number)]).isRequired,\n\n  /** Called after a click on calendar's cell. */\n  onCellClick: _propTypes.default.func,\n  onCellHover: _propTypes.default.func,\n\n  /** Index of an element in `data` array that should be displayed as hovered. */\n  hovered: _propTypes.default.number,\n\n  /** Index of an element (or array of indexes) in `data` array that should be displayed as active. */\n  active: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),\n\n  /** Array of element indexes in `data` array that should be displayed as disabled. */\n  disabled: _propTypes.default.arrayOf(_propTypes.default.number)\n};\nvar _default = Body;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}