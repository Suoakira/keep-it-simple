{"ast":null,"code":"import _classCallCheck from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/components/detailspage.js\";\nimport React, { Component } from 'react';\nimport { Button, Header, Image, Modal, Progress } from 'semantic-ui-react';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar ModalExampleDimmer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalExampleDimmer, _Component);\n\n  function ModalExampleDimmer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModalExampleDimmer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModalExampleDimmer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.close = function () {\n      return _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalExampleDimmer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data1: {\n          labels: ['Days Passed', \"Days to Go\"],\n          datasets: [{\n            data: [this.props.daysSoFar, this.props.daysToGo],\n            backgroundColor: ['#FF6384', '#FFCE56'],\n            hoverBackgroundColor: ['#FF6384', '#FFCE56']\n          }]\n        },\n        percentToSave: this.props.percentSave\n      });\n    } // https://github.com/jerairrest/react-chartjs-2 for documentation on carting\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          close = _this$props.close,\n          image = _this$props.image,\n          name = _this$props.name,\n          category = _this$props.category,\n          daysToGo = _this$props.daysToGo,\n          totalDays = _this$props.totalDays,\n          daysSoFar = _this$props.daysSoFar,\n          savingPerDay = _this$props.savingPerDay,\n          leftToSave = _this$props.leftToSave,\n          savedSoFar = _this$props.savedSoFar;\n      var percentSave = this.state.percentSave;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        dimmer: \"blurring\",\n        open: open,\n        onClose: close,\n        centered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, name), React.createElement(Modal.Content, {\n        image: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Image, {\n        wrapped: true,\n        size: \"large\",\n        src: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Modal.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, category), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Days till plan complete: \", daysToGo), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Plan Duration in days\", totalDays), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Days that have passed: \", daysSoFar), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Amount saved per day: \\xA3\", savingPerDay), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Total amount left to save: \\xA3\", leftToSave), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Amount you have saved so far:\\xA3\", savedSoFar), React.createElement(Doughnut, {\n        data: this.state.data1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Progress, {\n        percent: 100 - percentSave,\n        indicating: true,\n        progress: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        primary: true,\n        icon: \"checkmark\",\n        labelPosition: \"right\",\n        content: \"Close\",\n        onClick: close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ModalExampleDimmer;\n}(Component);\n\nexport default ModalExampleDimmer;","map":{"version":3,"sources":["/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/components/detailspage.js"],"names":["React","Component","Button","Header","Image","Modal","Progress","Doughnut","ModalExampleDimmer","state","close","setState","open","data1","labels","datasets","data","props","daysSoFar","daysToGo","backgroundColor","hoverBackgroundColor","percentToSave","percentSave","image","name","category","totalDays","savingPerDay","leftToSave","savedSoFar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Header, Image, Modal, Progress } from 'semantic-ui-react'\nimport { Doughnut } from 'react-chartjs-2';\n\nclass ModalExampleDimmer extends Component {\n    state = { \n        \n     }\n\n\n    close = () => this.setState({ open: false })\n\n    componentDidMount() {\n        this.setState({\n            data1: {\n                labels: [\n                    'Days Passed',\n                    \"Days to Go\" \n                ],\n                datasets: [{\n                    data: [this.props.daysSoFar, this.props.daysToGo],\n                    backgroundColor: [\n                        '#FF6384',\n                        '#FFCE56',\n                        \n                    ],\n                    hoverBackgroundColor: [\n                        '#FF6384',\n                        '#FFCE56',    \n                    ]\n                }]\n            },\n            percentToSave: this.props.percentSave\n        })\n        \n    }\n    // https://github.com/jerairrest/react-chartjs-2 for documentation on carting\n    render() {\n        const { open, close, image, name, category, daysToGo, totalDays, daysSoFar, savingPerDay, leftToSave, savedSoFar } = this.props\n        const { percentSave } = this.state\n\n\n\n        return (\n            <div>\n\n                <Modal dimmer=\"blurring\" open={open} onClose={close} centered={false}>\n                    <Modal.Header>{name}</Modal.Header>\n                    <Modal.Content image>\n                        <Image wrapped size='large' src={image} />\n                        <Modal.Description>\n                            <Header>{category}</Header>\n                            <p>Days till plan complete: {daysToGo}</p>\n                            <p>Plan Duration in days{totalDays}</p>\n                            <p>Days that have passed: {daysSoFar}</p>\n                            <p>Amount saved per day: £{savingPerDay}</p>\n                            <p>Total amount left to save: £{leftToSave}</p>\n                            <p>Amount you have saved so far:£{savedSoFar}</p>\n                            <Doughnut data={this.state.data1} />            \n\n                        </Modal.Description>\n                        <Progress percent={100 - percentSave} indicating progress />\n                    </Modal.Content>\n                    <Modal.Actions>\n\n                        <Button\n                            primary\n                            icon='checkmark'\n                            labelPosition='right'\n                            content=\"Close\"\n                            onClick={close}\n                        />\n                    </Modal.Actions>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ModalExampleDimmer"]},"metadata":{},"sourceType":"module"}