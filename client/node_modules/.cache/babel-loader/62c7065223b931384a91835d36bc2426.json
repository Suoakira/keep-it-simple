{"ast":null,"code":"import _toConsumableArray from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/containers/existingplans.js\";\nimport React, { Component } from 'react';\nimport ExisitingPlansCard from \"../components/exisitingplancard\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Modal, Loader, Segment } from 'semantic-ui-react';\nimport { Pagination } from 'semantic-ui-react';\n\nvar ExisitingPlans =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExisitingPlans, _Component);\n\n  function ExisitingPlans(props) {\n    var _this;\n\n    _classCallCheck(this, ExisitingPlans);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExisitingPlans).call(this, props));\n\n    _this.handleChange = function (event) {\n      return _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.toggleButton = function () {\n      _this.setState({\n        togglePlan: !_this.state.togglePlan\n      });\n\n      _this.filterStartDate();\n    };\n\n    _this.filterStartDate = function () {\n      var copySaveTargets = _toConsumableArray(_this.state.storedUserDetails.saving_targets);\n\n      var filters = copySaveTargets.filter(function (savingTargets) {\n        return Date.now() < new Date(savingTargets.start_date).getTime();\n      });\n      console.log(filters);\n    };\n\n    _this.hasStartDatePassed = function (startDate, endDate) {\n      if (Date.now() > new Date(startDate).valueOf() && Date.now() < new Date(endDate).valueOf()) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    _this.pagination = function (array, pageUp, pageDown) {\n      return array.slice(pageUp, pageDown);\n    };\n\n    _this.pageUpP = function () {\n      if (_this.state.pageDownP !== _this.mapPersonalPlans().length + 2) {\n        _this.setState({\n          pageUpP: _this.state.pageUpP + 1,\n          pageDownP: _this.state.pageDownP + 1\n        });\n      }\n    };\n\n    _this.pageDownP = function () {\n      if (_this.state.pageUpP !== 0) {\n        _this.setState({\n          pageUpP: _this.state.pageUpP - 1,\n          pageDownP: _this.state.pageDownP - 1\n        });\n      }\n    };\n\n    _this.pageUpG = function () {\n      if (_this.state.pageDownG !== _this.mapGroupPlans().length + 2) {\n        _this.setState({\n          pageUpG: _this.state.pageUpG + 1,\n          pageDownG: _this.state.pageDownG + 1\n        });\n      }\n    };\n\n    _this.pageDownG = function () {\n      if (_this.state.pageUpG !== 0) {\n        _this.setState({\n          pageUpG: _this.state.pageUpG - 1,\n          pageDownG: _this.state.pageDownG - 1\n        });\n      }\n    };\n\n    _this.totalStateAmount = function (array) {\n      var amount = 0;\n      array.forEach(function (savingTarget) {\n        return amount += savingTarget.amount;\n      });\n      return amount;\n    };\n\n    _this.mapPersonalPlans = function () {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          localeDelete = _assertThisInitialize.localeDelete;\n\n      var copySaveTargets = _toConsumableArray(_this.state.storedUserDetails.saving_targets);\n\n      var userId = _this.state.storedUserDetails.id;\n      var personalPlan = copySaveTargets.filter(function (savingTargets) {\n        return savingTargets.plan.toLowerCase() === \"personal\" && _this.hasStartDatePassed(savingTargets.start_date, savingTargets.end_date) && savingTargets.name.toLowerCase().includes(_this.state.searchFilter.toLowerCase());\n      });\n      return personalPlan.map(function (savingTargets) {\n        return React.createElement(ExisitingPlansCard, {\n          amount: _this.totalStateAmount(),\n          savingTargets: savingTargets,\n          localeDelete: localeDelete,\n          userId: userId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.mapGroupPlans = function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_assertThisInitialized(_this)),\n          localeDelete = _assertThisInitialize2.localeDelete;\n\n      var copySaveTargets = _toConsumableArray(_this.state.storedUserDetails.saving_targets);\n\n      var userId = _this.state.storedUserDetails.id;\n      var groupPlan = copySaveTargets.filter(function (savingTargets) {\n        return savingTargets.plan.toLowerCase() === \"group\" && _this.hasStartDatePassed(savingTargets.start_date, savingTargets.end_date) && savingTargets.name.toLowerCase().includes(_this.state.searchFilter.toLowerCase());\n      });\n      return groupPlan.map(function (savingTargets) {\n        return React.createElement(ExisitingPlansCard, {\n          savingTargets: savingTargets,\n          localeDelete: localeDelete,\n          userId: userId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.localeDelete = function (saving) {\n      var copyUserSts = _toConsumableArray(_this.state.storedUserDetails.saving_targets);\n\n      var filteredSts = copyUserSts.filter(function (savingTargets) {\n        return savingTargets.id !== saving.id;\n      });\n      copyUserSts.saving_targets = filteredSts;\n\n      _this.setState({\n        storedUserDetails: copyUserSts\n      });\n    };\n\n    _this.state = {\n      searchFilter: \"\",\n      togglePlan: true,\n      pageUpP: 0,\n      pageDownP: 3,\n      pageUpG: 0,\n      pageDownG: 3\n    };\n    return _this;\n  }\n\n  _createClass(ExisitingPlans, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(this.props.storedUserDetails.id)).then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        return _this2.setState({\n          storedUserDetails: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // this.filterPlans(this.state.searchFilter)\n      var toggleButton = this.toggleButton;\n      var username = this.props.username;\n      var _this$state = this.state,\n          storedUserDetails = _this$state.storedUserDetails,\n          togglePlan = _this$state.togglePlan;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button-pad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"ui big icon input search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"searchFilter\",\n        placeholder: \"Find a Plan...\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        class: \"search icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), togglePlan ? React.createElement(Button, {\n        primary: true,\n        size: \"large\",\n        onClick: function onClick() {\n          return toggleButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Upcoming Plans\") : React.createElement(Button, {\n        primary: true,\n        size: \"large\",\n        onClick: function onClick() {\n          return toggleButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Current Plans\")), username ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, storedUserDetails ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Personal Plans\", React.createElement(Header.Subheader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"A collection of your personal saving goals.\"))), !!this.mapPersonalPlans()[0] ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui grid container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.pagination(this.mapPersonalPlans(), this.state.pageUpP, this.state.pageDownP))) : React.createElement(\"div\", {\n        className: \"no-plans\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"You have no personal saving plans\"), React.createElement(Link, {\n        to: \"/home/newplan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"ui primary button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Create A Plan\", React.createElement(\"i\", {\n        class: \"arrow right icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.pageUpP();\n        },\n        compact: true,\n        primary: true,\n        size: \"tiny\",\n        floated: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Next\", React.createElement(\"i\", {\n        class: \"long arrow alternate right icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.pageDownP();\n        },\n        compact: true,\n        primary: true,\n        size: \"tiny\",\n        floated: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"long arrow alternate left icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), \"Prev\")), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Group Plans\", React.createElement(Header.Subheader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"A collection your of group saving goals.\"))), !!this.mapGroupPlans()[0] ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui grid container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.pagination(this.mapGroupPlans(), this.state.pageUpG, this.state.pageDownG))) : React.createElement(\"div\", {\n        className: \"no-plans\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"You have no group saving plans\"), React.createElement(Link, {\n        to: \"/home/newplan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"ui primary button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Create A Plan\", React.createElement(\"i\", {\n        class: \"arrow right icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.pageUpG();\n        },\n        compact: true,\n        primary: true,\n        size: \"tiny\",\n        floated: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Next\", React.createElement(\"i\", {\n        class: \"long arrow alternate right icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.pageDownG();\n        },\n        compact: true,\n        primary: true,\n        size: \"tiny\",\n        floated: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"long arrow alternate left icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), \"Prev\"))) : React.createElement(Loader, {\n        active: true,\n        inline: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"footpad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ExisitingPlans;\n}(Component);\n\nexport default ExisitingPlans;","map":{"version":3,"sources":["/Users/home/Development/end_of_module_projects/module5/final_project/keep-it-simple/client/src/containers/existingplans.js"],"names":["React","Component","ExisitingPlansCard","Redirect","Link","Button","Header","Icon","Modal","Loader","Segment","Pagination","ExisitingPlans","props","handleChange","event","setState","target","name","value","toggleButton","togglePlan","state","filterStartDate","copySaveTargets","storedUserDetails","saving_targets","filters","filter","savingTargets","Date","now","start_date","getTime","console","log","hasStartDatePassed","startDate","endDate","valueOf","pagination","array","pageUp","pageDown","slice","pageUpP","pageDownP","mapPersonalPlans","length","pageUpG","pageDownG","mapGroupPlans","totalStateAmount","amount","forEach","savingTarget","localeDelete","userId","id","personalPlan","plan","toLowerCase","end_date","includes","searchFilter","map","groupPlan","saving","copyUserSts","filteredSts","fetch","then","resp","json","data","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ExisitingPlansCard from \"../components/exisitingplancard\"\nimport { Redirect, Link } from \"react-router-dom\"\nimport { Button, Header, Icon, Modal, Loader, Segment } from 'semantic-ui-react'\nimport { Pagination } from 'semantic-ui-react'\n\nclass ExisitingPlans extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchFilter: \"\",\n            togglePlan: true,\n            pageUpP: 0,\n            pageDownP: 3,\n            pageUpG: 0,\n            pageDownG: 3\n          }\n    }\n\n    handleChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n    toggleButton = () => {\n        this.setState({\n            togglePlan: !this.state.togglePlan\n        })\n        this.filterStartDate()\n    }\n\n    //future plans\n    filterStartDate = () => {\n        const copySaveTargets = [...this.state.storedUserDetails.saving_targets]\n        const filters = copySaveTargets.filter(savingTargets => Date.now() < new Date(savingTargets.start_date).getTime())\n        console.log(filters)\n    }\n    hasStartDatePassed = (startDate, endDate) => {\n        if ((Date.now() > new Date(startDate).valueOf()) && (Date.now() < new Date(endDate).valueOf())) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    // Pagination code, could be refactored to DRY later\n\n    pagination = (array, pageUp, pageDown) => {\n        return array.slice(pageUp, pageDown)  \n    }\n\n    pageUpP = () => {\n        if ( this.state.pageDownP !== this.mapPersonalPlans().length + 2) {\n        this.setState({ pageUpP: this.state.pageUpP + 1, pageDownP: this.state.pageDownP + 1 })\n        } \n    }\n    pageDownP = () => {\n        if (this.state.pageUpP !== 0) {\n        this.setState({ pageUpP: this.state.pageUpP - 1, pageDownP: this.state.pageDownP - 1 })\n        }\n    }\n    // refactor sections of code to be one DRY section\n    pageUpG = () => {\n        if (this.state.pageDownG !== this.mapGroupPlans().length + 2) {\n            this.setState({ pageUpG: this.state.pageUpG + 1, pageDownG: this.state.pageDownG + 1 })\n        }\n    }\n    pageDownG = () => {\n        if (this.state.pageUpG !== 0) {\n            this.setState({ pageUpG: this.state.pageUpG - 1, pageDownG: this.state.pageDownG - 1 })\n        }\n    }\n\n    totalStateAmount = (array) => {\n        let amount = 0\n        array.forEach(savingTarget => amount += savingTarget.amount)\n        return amount\n    }\n    \n\n    mapPersonalPlans = () => {\n        const { localeDelete } = this\n        const copySaveTargets = [...this.state.storedUserDetails.saving_targets]\n        const userId = this.state.storedUserDetails.id\n\n        const personalPlan = copySaveTargets.filter(savingTargets => \n            ((savingTargets.plan.toLowerCase() === \"personal\") \n            && \n            (this.hasStartDatePassed(savingTargets.start_date, savingTargets.end_date)\n            &&\n            (savingTargets.name.toLowerCase().includes(this.state.searchFilter.toLowerCase()))\n            )))\n\n        return personalPlan.map(savingTargets => <ExisitingPlansCard amount={this.totalStateAmount()} savingTargets={savingTargets} localeDelete={localeDelete} userId={userId}/>)\n    }\n\n    mapGroupPlans = () => {\n        const { localeDelete } = this\n        const copySaveTargets = [...this.state.storedUserDetails.saving_targets]\n        const userId = this.state.storedUserDetails.id\n\n        const groupPlan = copySaveTargets.filter(savingTargets => \n            ((savingTargets.plan.toLowerCase() === \"group\") \n            && \n            (this.hasStartDatePassed(savingTargets.start_date, savingTargets.end_date)\n            &&\n                (savingTargets.name.toLowerCase().includes(this.state.searchFilter.toLowerCase()))\n            )))\n        \n        return groupPlan.map(savingTargets => \n        <ExisitingPlansCard savingTargets={savingTargets} localeDelete={localeDelete} userId={userId} />)\n    }\n\n    localeDelete = (saving) => {\n        let copyUserSts = [...this.state.storedUserDetails.saving_targets]\n        const filteredSts = copyUserSts.filter(savingTargets => savingTargets.id !== saving.id )\n        copyUserSts.saving_targets = filteredSts\n        this.setState({ storedUserDetails: copyUserSts})\n    }\n\n    componentDidMount() {\n        fetch(`http://localhost:3000/api/v1/users/${this.props.storedUserDetails.id}`)\n            .then(resp => resp.json())\n            .then(data => this.setState({ storedUserDetails: data }))\n    }\n\n    render() { \n        // this.filterPlans(this.state.searchFilter)\n        const { toggleButton } = this\n        const { username } = this.props\n        const { storedUserDetails, togglePlan } = this.state\n  \n        return ( \n            \n            <React.Fragment>\n                <div className=\"wrapper\">\n                    <div className=\"button-pad\">\n                        <div class=\"ui big icon input search-bar\">\n                                <input \n                                type=\"text\"\n                                name=\"searchFilter\"\n                                placeholder=\"Find a Plan...\"\n                                onChange={this.handleChange}\n                                    />\n                            <i class=\"search icon\"></i>\n                        </div>\n                            {togglePlan ?\n                            <Button\n                                primary\n                                size=\"large\"\n                                onClick={() => toggleButton()}\n                            >\n                                Upcoming Plans\n                            </Button>\n                            :\n                            <Button\n                                primary\n                                size=\"large\"\n                                onClick={() => toggleButton()}\n                            >\n                                Current Plans\n                            </Button>    \n                            }\n                    </div>\n            {username?\n                <React.Fragment>\n                    {storedUserDetails?\n                    <React.Fragment>\n                        <Segment>\n                            <Segment>\n                                <Header size='large'>Personal Plans\n                                    <Header.Subheader>A collection of your personal saving goals.</Header.Subheader>\n                                </Header>\n                            </Segment>\n                                {!!this.mapPersonalPlans()[0] ?\n                                \n                                \n                                <React.Fragment>\n                                <div className=\"ui grid container\">\n                                    {this.pagination(this.mapPersonalPlans(), this.state.pageUpP, this.state.pageDownP)}\n                                </div>                          \n\n                                </React.Fragment>\n                                :\n                                <div className=\"no-plans\">\n                                    <Header>You have no personal saving plans</Header>\n                                        <Link to=\"/home/newplan\"><button class=\"ui primary button\">\n                                            Create A Plan<i class=\"arrow right icon\"></i></button>\n                                        </Link>\n                                </div>\n                                }\n                        </Segment>\n                            <div className=\"pagination\">\n                                <Button onClick={() => this.pageUpP()} compact primary size=\"tiny\" floated='right'>Next<i class=\"long arrow alternate right icon\"></i></Button>\n                                <Button onClick={() => this.pageDownP()} compact primary size=\"tiny\" floated='left'><i class=\"long arrow alternate left icon\"></i>Prev</Button>\n                            </div>  \n                        <Segment>\n                            <Segment>\n                                <Header size='large'>Group Plans\n                                    <Header.Subheader>A collection your of group saving goals.</Header.Subheader>\n                                </Header>\n                            </Segment>\n                            {!!this.mapGroupPlans()[0] ?\n                            <React.Fragment>\n                                <div className=\"ui grid container\">\n                                    {this.pagination(this.mapGroupPlans(), this.state.pageUpG, this.state.pageDownG)}\n                                </div>\n                            </React.Fragment>\n                            :\n                            <div className=\"no-plans\">\n                                <Header>You have no group saving plans</Header>\n                                <Link to=\"/home/newplan\"><button class=\"ui primary button\">\n                                    Create A Plan<i class=\"arrow right icon\"></i></button>\n                                </Link>\n                            </div>\n                            }\n                        </Segment>\n                            <div className=\"pagination\">\n                                <Button onClick={() => this.pageUpG()} compact primary size=\"tiny\" floated='right'>Next<i class=\"long arrow alternate right icon\"></i></Button>\n                                <Button onClick={() => this.pageDownG()} compact primary size=\"tiny\" floated='left'><i class=\"long arrow alternate left icon\"></i>Prev</Button>\n                            </div>  \n                    </React.Fragment>\n                            :\n                        <Loader active inline='centered' />\n                        }\n                </React.Fragment>\n                :\n                <React.Fragment>\n                <Redirect\n                    to=\"/login\" /> \n                </React.Fragment>\n                }\n\n                </div>\n                <div className=\"footpad\">\n  \n                </div>\n            </React.Fragment>\n        \n        \n                )\n            }\n        }\n         \n        export default ExisitingPlans\n        \n        \n        \n"]},"metadata":{},"sourceType":"module"}