{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar BaseInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BaseInput, _React$Component);\n\n  function BaseInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BaseInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BaseInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closePopup\", function () {\n      _this.setState({\n        popupIsClosed: true\n      }, _this.onPopupClose);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onPopupClose\", function () {\n      // When `closable` prop is true on *Input element\n      // `this.closePopup` is invoked after selection complete.\n      // To allow popup to be opened again we need to set\n      // `popupIsClosed` to false\n      // Also `this.closePopup` is used when we force popup to close on blur\n      // when using Tab navigation\n      _this.setState({\n        popupIsClosed: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isPickerInFocus\", function () {\n      return document.activeElement === _this.calendarNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isTriggerInFocus\", function () {\n      return document.activeElement === _this.inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onModeSwitch\", function () {\n      // when using keyboard for selecting values on inline calendar\n      // and when mode switches, picker looses focus.\n      // In order to preserve focus on active picker\n      // we call focus() on `calendarNode`.\n      // `calendarNode` goes from *View component via\n      // `this.onCalendarViewMount` callback\n      if (_this.props.inline && !_this.isPickerInFocus()) {\n        _this.calendarNode && _this.calendarNode.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onCalendarViewMount\", function (calendarNode) {\n      _this.calendarNode = calendarNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onInputViewMount\", function (inputNode) {\n      _this.inputNode = inputNode;\n    });\n\n    return _this;\n  }\n\n  return BaseInput;\n}(_react.default.Component);\n\nvar _default = BaseInput;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}